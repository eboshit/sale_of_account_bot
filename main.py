import jsonimport telebotfrom telebot import typesimport reimport datetimeimport picklefrom multiprocessing import *import scheduleimport timefrom datetime import timedeltafrom flask import Flask, requestimport sslfrom keyboard import *from classes import *from config import *bot = telebot.TeleBot(API_TOKEN)bot.remove_webhook()bot.delete_webhook()app = Flask(__name__)task1 = Task()pay_keyboard_list = load_data(file_name="payment_methods.json")pay_keyboard = list_to_keyboard(pay_keyboard_list)pay_keyboard_for_admin = list_to_keyboard(pay_keyboard_list, "_change").add(    types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="payments"))@app.route(f'/{API_TOKEN}', methods=["POST", "GET"])def handle():    json_string = request.get_data().decode('utf-8')    save_data(json_string, 'json_string.json')    update = telebot.types.Update.de_json(json_string)    bot.process_new_updates([update])    return "ok", 200@app.route(f'/', methods=["POST", "GET"])def h():    return "HELLO"###—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∞–¥–º–∏–Ω—Édef default_admin_value(admin: Admin) -> None:    admin.telegraph_name = ''    admin.telegraph_url = ''    admin.telegraph_action = 0    admin.flag = 4    admin.telegraph_name = ''    admin.telegraph_url = ''    admin.telegraph_action = 0    admin.edit_acc_name = ""    admin.edit_acc_first_mes = ""    admin.edit_acc_second_mes = ""    admin.edit_acc_third_mes = ""    admin.edit_acc_price = 0    admin.post_mail_text = ""    admin.post_mail_text_button = ""    admin.post_mail_url = ""    admin.post_mail_action = 0    admin.post_mail_disable_notification = True    admin.channel_sale_text = ""    admin.channel_sale_button = []    admin.channel_sale_count = -1    admin.procent_name = []    admin.procent_lvl_1 = 0    admin.procent_lvl_2 = 0    admin.edit_period = 0    admin.edit_main_mes = ""###–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª—ãdef checking_for_subscription(user_id: int) -> bool:  # –û—Å—Ç–∞–≤–∏—Ç—å    try:        m = bot.get_chat_member(chat_id='-1001695261290', user_id=user_id)        r = bot.get_chat_member(chat_id='-1001558866443', user_id=user_id)        if m.status != 'left' and r.status != 'left':            return True        else:            return False    except:        return False###–∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏(—Ç–µ–ª–µ–≥—Ä–∞—Ñ) –¥–ª—è –∞–¥–º–∏–Ω–∞ # Vdef edit_button_instr(admin: int, name: str, url: str, action: int,                      message_id: int | None) -> None:  # 0-–∏–∑–º–µ–Ω–∏—Ç—å url –∫–Ω–æ–ø–∫–∏; 1-–¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É # 2-—É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É    try:        with open("file.pkl", "rb") as fp:            a = pickle.load(fp)        instruction_keyboard = pickle.loads(a["instruction_keyboard"])        if action == 0:            for i in range(len(instruction_keyboard.keyboard)):                if instruction_keyboard.keyboard[i][0].text == name:                    instruction_keyboard.keyboard[i][0].text = name                    instruction_keyboard.keyboard[i][0].url = url                    break            else:                bot.edit_message_text(chat_id=admin,                                      message_id=message_id,                                      text='–¢–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞—à–ª–∞—Å—å\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',                                      reply_markup=instr_keyboard)        elif action == 1:            instruction_keyboard.keyboard.append([types.InlineKeyboardButton(text=name, url=url)])        elif action == 2:            for i in range(len(instruction_keyboard.keyboard)):                if instruction_keyboard.keyboard[i][0].text == name:                    del instruction_keyboard.keyboard[i]                    break            else:                bot.send_message(chat_id=admin,                                 text='–¢–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞—à–ª–∞—Å—å\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',                                 reply_markup=instr_keyboard)        serialized = pickle.dumps(instruction_keyboard)        data = {'instruction_keyboard': serialized}        with open("file.pkl", "wb+") as fp:            pickle.dump(data, fp)        instruction_keyboard.keyboard.append([types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –¥–µ–π—Å—Ç–≤–∏—è",                                                                         callback_data='edit_button_instr')])        instruction_keyboard.keyboard.append([types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é —Ñ—É–Ω–∫—Ü–∏–π –∞–¥–º–∏–Ω–∞",                                                                         callback_data='back_main_admin')])        bot.send_message(chat_id=admin,                         text="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:",                         reply_markup=instruction_keyboard)    except:        bot.send_message(chat_id=admin,                         text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞\n –í–æ–∑–º–æ–∂–Ω–æ –æ—à–∏–±–∫–∞ –≤ url, –∫–æ—Ç–æ—Ä–æ–µ –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏",                         reply_markup=admin_keyboard)###–æ—Ç–ø—Ä–∞–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"def sending_and_deleting_main_message():  # V –û—Å—Ç–∞–≤–∏—Ç—å    set_main_message = load_data("main_mes.json")    try:        bot.delete_message(chat_id=actual_verify_channel, message_id=set_main_message["message_id"])    except:        pass    r = bot.send_message(chat_id=actual_verify_channel, text=f"{set_main_message['text']}")    set_main_message["message_id"] = r.id    save_data(set_main_message, "main_mes.json")###–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏class P_schedule():  # Class –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å schedule    def start_schedule(self):        set_main_message = load_data("main_mes.json")        schedule.every(set_main_message["period"]).minutes.do(sending_and_deleting_main_message)        while True:  # –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞            schedule.run_pending()            time.sleep(1)class periodic_main_mes:    p0 = Process(target=P_schedule.start_schedule, args=())    def start_process(self):        self.p0 = Process(target=P_schedule.start_schedule, args=())        self.p0.start()    def stop_process(self):        self.p0.terminate()# /start@bot.message_handler(commands=["start"])def start(message):    user_id = message.from_user.id    user = users.get_elem(user_id)    if message.from_user.username:        ###–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î        if not user:            ###–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à—ë–ª –ø–æ —Ä–µ—Ñ–µ—Ä—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ            if "start" in message.text and len(str(message.text).split(' ')) == 2 \                    and str(message.text).split(' ')[-1] in users.data and \                    str(message.text).split(' ')[-1] != str(user_id):                ref_boss_1 = int(str(message.text).split(' ')[-1])                ref_boss_2 = users.get_elem(user_id).referral_bosses[0]                users.add_elem(user_id, ref_boss=ref_boss_1, ref_boss_2=ref_boss_2)            ###–ò–Ω–∞—á–µ            else:                users.add_elem(user_id)            user = users.get_elem(user_id)            r = bot.send_message(chat_id=message.from_user.id,                                 text=text_ancet,                                 parse_mode='Markdown')            user.bot_messageId = r.id            time = datetime.datetime.today().strftime("%Y.%m.%d –≤ %H:%M")            user.registration_date = time        ###–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω        elif not user.status:            bot.send_message(chat_id=user_id,                             text="‚ùå‚ùå‚ùå\n–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å, –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ, –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù!\n‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è\n-------------\n<strong>O "                                  "–ø—Ä–∏—á–∏–Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ "                                  "—á–∏—Ç–∞–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ù–∞–ø–∏—à–∏—Ç–µ –≤ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ @VerifSupportBot –¥–ª—è "                                  "–ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏.</strong>\n "                                  "-------------\n‚ö†Ô∏è –ï—Å–ª–∏ –í—ã –∂–µ–ª–∞–µ—Ç–µ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ, –ø–∏—à–∏—Ç–µ –≤ –±–æ—Ç "                                  "–ø–æ–¥–¥–µ—Ä–∂–∫–∏, –¥–∞–π—Ç–µ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ "                                  " –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ—á–µ–º—É –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –í–∞—Å –Ω—É–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å.",                             parse_mode="HTML")        ###–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω        elif user.full_registered:            if checking_for_subscription(message.from_user.id):                user.flag = 0                ###–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –§–ò–û                if user.changing_complete_name:                    user.complete_name = []                    user.flag = 25                    r = bot.send_message(chat_id=user_id,                                         text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –§–ò–û\nüñå –í–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –Ω–∏–∂–µ ‚¨áÔ∏è\n"                                              "–ù–∞–ø—Ä–∏–º–µ—Ä: Taylor / Sergeevsky")                ###–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã(—Å—Ç—Ä–∞–Ω–∞+–¥–æ–∫—É–º–µ–Ω—Ç—ã)                elif user.changing_country_type_document:                    user.flag = 25                    user.document_types = []                    r = bot.send_message(chat_id=user_id,                                         text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –≤–∞—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:",                                         reply_markup=country_keyboard)                ###–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–ø–æ—Å–æ–±–∞ –≤—ã–ø–ª–∞—Ç                elif user.changing_payment:                    user.flag = 3                    r = bot.send_message(chat_id=user_id,                                         text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–ø–ª–∞—Ç:\n*–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, "                                              "–∑–∞–º–µ–Ω–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–µ–ª–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä—É—á–Ω—É—é!",                                         reply_markup=pay_keyboard)                ###–ï—Å–ª–∏ –∞–¥–º–∏–Ω                elif user_id in admins.data:                    admin = admins.get_elem(user_id)                    user.flag = 0                    admin.flag = 4                    r = bot.send_message(chat_id=user_id,                                         text=f"{start_text}",                                         reply_markup=start_admin_keyboard,                                         parse_mode='Markdown')                ###–ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å                else:                    r = bot.send_message(chat_id=user_id,                                         text=f"{start_text}",                                         reply_markup=start_keyboard,                                         parse_mode='Markdown')                user.bot_messageId = r.id            else:                bot.send_message(chat_id=message.from_user.id,                                 text="üôå –í—ã –≤ –æ–¥–Ω–æ–º —à–∞–≥–µ –æ—Ç –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å:\n‚ôªÔ∏è –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ "                                      "- —É–∑–Ω–∞–π –æ —Ä–∞–±–æ—Ç–µ –∏ –æ–ø–ª–∞—Ç–µ\nüìö –ü—Ä–∞–≤–∏–ª–∞ –∏ —É—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n–ò –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "                                      "üü¢ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É!",                                 reply_markup=subcribe_keyboard)        ###–ï—Å–ª–∏ –Ω–µ –ø—Ä–æ—à—ë–ª –ø–æ–ª–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω–æ –µ—Å—Ç—å –≤ –ë–î        else:            user.flag = 25            user.status = True            user.complete_name = []            user.payment_method = ""            user.payment_account = ""            user.countries = []            user.document_types = []            user.balance = 0            user.earnings = 0            user.date_edit_payment = ""            r = bot.send_message(chat_id=message.from_user.id,                                 text=text_ancet,                                 parse_mode='Markdown')            user.bot_messageId = r.id        save_object(users, "users.pkl")    ###–ü—Ä–æ–≤–µ—Ä–∫–∞ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è    else:        bot.send_message(chat_id=user_id,                         text="–û–®–ò–ë–ö–ê!\n–£–∫–∞–∂–∏—Ç–µ"                              " @username –≤ –í–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ Telegram, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º!")@bot.message_handler(content_types=["text"])  # , func=lambda message: users.get_elem(message.from_user.id).flag == 4 )def reg(message):    user_id = message.from_user.id    user = users.get_elem(user_id)    if message.from_user.username:        if user:            if user.status:                if message.text == "üí§ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞":                    if user_id in admins.data:                        r = bot.send_message(chat_id=user_id,                                             text=f"{start_text}",                                             reply_markup=start_admin_keyboard,                                             parse_mode='Markdown')                    else:                        r = bot.send_message(chat_id=user_id,                                             text=f"{start_text}",                                             reply_markup=start_keyboard,                                             parse_mode='Markdown')                    user.bot_messageId = r.id                ###—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏                elif len(user.complete_name) == 0:                    if user.flag != 27:                        if re.match("^[ABCDEFGHIJKLMNOPQRSTUVWXYZ]", message.text.upper()):                            if " " in message.text:                                bot.send_message(chat_id=user_id,                                                 text="–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–æ. –ü–∏—à–∏—Ç–µ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤")                            else:                                resp_keyboard = types.InlineKeyboardMarkup().add(                                    types.InlineKeyboardButton(text="–ü–û–î–¢–í–ï–†–î–ò–¢–¨",                                                               callback_data="next_step_in_reg")).add(                                    types.InlineKeyboardButton(text="–ò–ó–ú–ï–ù–ò–¢–¨",                                                               callback_data="edit_complete_name_element"))                                if not user.full_registered:                                    resp_keyboard.add(                                        types.InlineKeyboardButton(text="–û–¢–ú–ï–ù–ê", callback_data="cancel_fio"))                                user.flag = 27                                user.complete_name.append(message.text)                                bot.delete_message(chat_id=user_id,                                                   message_id=user.bot_messageId)                                bot.delete_message(chat_id=user_id,                                                   message_id=message.message_id)                                bot.send_message(chat_id=user_id,                                                 text=f"–í—ã –≤–≤–µ–ª–∏ {message.text}",                                                 reply_markup=resp_keyboard)                        else:                            bot.send_message(chat_id=user_id,                                             text="–û—à–∏–±–∫–∞: –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! "                                                  "–ï—Å–ª–∏ –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞")                    else:                        bot.delete_message(chat_id=user_id, message_id=message.id)                ###—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏                elif len(user.complete_name) == 1:                    if user.flag != 27:                        if re.match("^[ABCDEFGHIJKLMNOPQRSTUVWXYZ]", message.text.upper()):                            if " " in message.text:                                bot.send_message(chat_id=user_id,                                                 text="–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–æ. –ü–∏—à–∏—Ç–µ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤")                            else:                                resp_keyboard = types.InlineKeyboardMarkup().add(                                    types.InlineKeyboardButton(text="–ü–û–î–¢–í–ï–†–î–ò–¢–¨",                                                               callback_data="next_step_in_reg")).add(                                    types.InlineKeyboardButton(text="–ò–ó–ú–ï–ù–ò–¢–¨",                                                               callback_data="edit_complete_name_element"))                                if not user.full_registered:                                    resp_keyboard.add(                                        types.InlineKeyboardButton(text="–û–¢–ú–ï–ù–ê", callback_data="cancel_fio"))                                user.flag = 27                                user.complete_name.append(message.text)                                bot.delete_message(chat_id=user_id,                                                   message_id=user.bot_messageId)                                bot.delete_message(chat_id=user_id,                                                   message_id=message.message_id)                                bot.send_message(chat_id=user_id,                                                 text=f'–í—ã –≤–≤–µ–ª–∏ {user.complete_name[0]} {message.text}',                                                 reply_markup=resp_keyboard)                        else:                            bot.send_message(chat_id=user_id,                                             text="–û—à–∏–±–∫–∞: –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! "                                                  "–ï—Å–ª–∏ –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞")                    else:                        bot.delete_message(chat_id=user_id, message_id=message.id)                ###—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Å—Ç–≤–∞                elif len(user.complete_name) == 2:                    if user.flag != 27:                        if re.match("^[ABCDEFGHIJKLMNOPQRSTUVWXYZ]", message.text.upper()):                            if " " in message.text:                                bot.send_message(chat_id=user_id,                                                 text="–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–æ. –ü–∏—à–∏—Ç–µ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤")                            else:                                resp_keyboard = types.InlineKeyboardMarkup().add(                                    types.InlineKeyboardButton(text="–ü–û–î–¢–í–ï–†–î–ò–¢–¨",                                                               callback_data="next_step_in_reg")).add(                                    types.InlineKeyboardButton(text="–ò–ó–ú–ï–ù–ò–¢–¨",                                                               callback_data="edit_complete_name_element"))                                if not user.full_registered:                                    resp_keyboard.add(                                        types.InlineKeyboardButton(text="–û–¢–ú–ï–ù–ê", callback_data="cancel_fio"))                                user.flag = 27                                user.complete_name.append(message.text)                                bot.delete_message(chat_id=user_id,                                                   message_id=user.bot_messageId)                                bot.delete_message(chat_id=user_id, message_id=message.message_id)                                bot.send_message(chat_id=user_id,                                                 text=f'–í—ã –≤–≤–µ–ª–∏ {user.complete_name[0]} {user.complete_name[1]} '                                                      f'{message.text}',                                                 reply_markup=resp_keyboard)                        else:                            bot.send_message(chat_id=user_id,                                             text="–û—à–∏–±–∫–∞: –¥–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏! "                                                  "–ï—Å–ª–∏ –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞")                    else:                        bot.delete_message(chat_id=user_id, message_id=message.id)                ###—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤—ã–ø–ª–∞—Ç—ã                ###—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤—ã–ø–ª–∞—Ç—ã                elif user.flag == 2 or user.flag == 3:                    if user.flag != 28 and user.flag != 29:                        # if message.text.isdigit():                        bot.delete_message(chat_id=user_id,                                           message_id=user.bot_messageId)                        user.payment_account = message.text                        bot.send_message(chat_id=user_id,                                         text=f"–í—ã –≤–≤–µ–ª–∏: {message.text}",                                         reply_markup=filling_user_payment_acc_keyboard)                        if user.flag != 3:                            user.flag = 28                        else:                            user.flag = 29                        # else:                        # bot.send_message(chat_id=message.from_user.id,                        #                 text="–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–æ!\n–í–≤–µ–¥–∏—Ç–µ –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ –ø—Ä–∏–º–µ—Ä–µ")                    else:                        bot.delete_message(chat_id=user_id, message_id=message.id)                elif message.text == 'üìï –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?':                    if user_id in admins.data:                        bot.send_message(chat_id=user_id,                                         text="1. –ó–∞–ø–æ–ª–Ω—è–µ—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å.\n2. –î–µ–ª–∞–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã, "                                              "–ø–æ —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ.\n3. –ó–∞–≥—Ä—É–∂–∞–µ—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –±–æ—Ç, –ø–æ–ª—É—á–∞–µ—Ç–µ –≤—ã–ø–ª–∞—Ç—É!\n"                                              "`–¢–∞–∫-–∂–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞!`",                                         reply_markup=start_admin_keyboard,                                         parse_mode="Markdown")                    else:                        bot.send_message(chat_id=user_id,                                         text="1. –ó–∞–ø–æ–ª–Ω—è–µ—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å.\n2. –î–µ–ª–∞–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã, "                                              "–ø–æ —É—Å–ª–æ–≤–∏—è–º–∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ.\n3. –ó–∞–≥—Ä—É–∂–∞–µ—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –±–æ—Ç, –ø–æ–ª—É—á–∞–µ—Ç–µ –≤—ã–ø–ª–∞—Ç—É!\n"                                              "`–¢–∞–∫-–∂–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞!`",                                         reply_markup=start_keyboard,                                         parse_mode="Markdown")                elif message.text == '‚úÖ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç':                    bot.send_message(chat_id=user_id,                                     text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê–ö–¢–£–ê–õ–¨–ù–´–• —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ –ó–ê–ö–†–ï–ü–õ–ï–ù–û–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ, –≤ –±—É–¥–Ω–∏"                                          " —Å 11:00 –¥–æ 19:00 –ú–°–ö.\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",                                     reply_markup=services_accounts.keyboard_init(user))                elif message.text == '‚ôªÔ∏è –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã':                    if len(user.accounts_check) != 0:                        bot.send_message(chat_id=user_id,                                         text=f"üìç –í–∞—à–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:\n"                                              f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ "                                              f"–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –í–∞–º–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!",                                         reply_markup=user.keyboard_with_accs())                    else:                        bot.send_message(chat_id=user_id,                                         text=f"–í–∞—à–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å "                                              f"–¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –í–∞–º–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!")                elif message.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':                    count_no_verified = user.count_no_verified_accs                    count_verified_paid = user.count_verified_paid_accs                    count_verified_rejected = user.count_verified_rejected_accs                    if user_id in admins.data:                        bot.send_message(chat_id=user_id,                                         text=f"–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö: {count_no_verified}\n"                                              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏ –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö: {count_verified_paid}\n"                                              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö: {count_verified_rejected}",                                         reply_markup=start_admin_keyboard)                    else:                        bot.send_message(chat_id=user_id,                                         text=f"–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö: {count_no_verified}\n"                                              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏ –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö: {count_verified_paid}\n"                                              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö: {count_verified_rejected}",                                         reply_markup=start_keyboard)                elif message.text == 'üë§ –ü—Ä–æ—Ñ–∏–ª—å':                    user_name = message.from_user.username                    if message.from_user.first_name is None:                        first_name = ''                    else:                        first_name = str(message.from_user.first_name) + ' '                    if message.from_user.last_name is None:                        last_name = ''                    else:                        last_name = str(message.from_user.last_name)                    registration_date = user.registration_date                    if user.payment_method == "QIWI":                        requisites = user.payment_account + " (Qiwi üì≤)"                    else:                        requisites = user.payment_account                    country_docs = user.get_str_countries_and_document_types()                    full_name = user.complete_name[0] + " " + user.complete_name[1] + " " + user.complete_name[2]                    user_balance = user.balance                    r = bot.send_message(chat_id=user_id,                                         text=f"`{first_name + last_name}`, —ç—Ç–æ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å!\n"                                              f"üÜî –í–∞—à id: `{user_id}`\n"                                              f"üë§ –í–∞—à –ª–æ–≥–∏–Ω: `@{user_name}`\n"                                              f"üìù –§–ò–û —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –∞–Ω–∫–µ—Ç–µ: `{full_name}`\n"                                              f"‚úÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: *{registration_date}*\n"                                              f"üåç –°—Ç—Ä–∞–Ω–∞: *{country_docs['countries']}*\n"                                              f"üìÇ –î–æ–∫—É–º–µ–Ω—Ç—ã: *{country_docs['document_types']}*\n"                                              f"üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –≤—ã–ø–ª–∞—Ç: `{requisites}`\n"                                              f"üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: *{user_balance} —Ä—É–±*",                                         reply_markup=profile_keyboard,                                         parse_mode="Markdown")                    user.bot_messageId = r.id                elif message.text == 'üì£ –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞':                    personal_link = user.referral_link                    status = user.referral_status                    invited_users = user.invited_users()                    personal_balance = user.balance                    reward_lvl_1 = user.reward_lvl_1                    reward_lvl_2 = user.reward_lvl_2                    bot.send_message(chat_id=message.from_user.id,                                     text=f"–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞:\n\n"                                          f"–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ "                                          f"–ø–æ–ª—É—á–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è –∑–∞ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ"                                          f" –∞–∫–∫–∞—É–Ω—Ç—ã –≤–∞—à–∏—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n–£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è –≤ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ —á–∏—Ç–∞–π—Ç–µ"                                          f" [–ó–î–ï–°–¨]({rules_link})\n\nüîó "                                          f"–í–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ª—é–¥–µ–π:\n`{personal_link}`\n"                                          f"üî∞ –í–∞—à —Å—Ç–∞—Ç—É—Å: *{status}*\nüíµ"                                          f"–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—è–º –≤ —Å—Ç–∞—Ç—É—Å–µ *{status}*:\n"                                          f"–£—Ä–æ–≤–µ–Ω—å 1 - {reward_lvl_1}%\n"                                          f"–£—Ä–æ–≤–µ–Ω—å 2 - {reward_lvl_2}%\n\n"                                          f"–í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ (–ø–æ —É—Ä–æ–≤–Ω—è–º):\n"                                          f"üë§–£—Ä–æ–≤–µ–Ω—å 1 - {invited_users['lvl1']}\n"                                          f"üë§–£—Ä–æ–≤–µ–Ω—å 2 - {invited_users['lvl2']} \n\n"                                          f"–í–∞—à –±–∞–ª–∞–Ω—Å - {personal_balance} —Ä—É–±",                                     reply_markup=sup_program_keyboard,                                     parse_mode='MarkDown')                elif message.text == 'üìö Support & FAQ':                    if user_id in admins.data:                        bot.send_message(chat_id=user_id,                                         text=f"üë© –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n\n"                                              f"–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ [–ë–û–¢–ê –ü–û–î–î–ï–†–ñ–ö–ò]({support_bot_link}) ü§ñ\n"                                              f"–ü—Ä–∞–≤–∏–ª–∞ –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –ó[–î–ï–°–¨]({sup_rules_link}) üëâüìÉ",                                         reply_markup=start_admin_keyboard,                                         parse_mode='Markdown')                    else:                        bot.send_message(chat_id=user_id,                                         text=f"üë© –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n\n"                                              f"–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ [–ë–û–¢–ê –ü–û–î–î–ï–†–ñ–ö–ò]({support_bot_link}) ü§ñ\n"                                              f"–ü—Ä–∞–≤–∏–ª–∞ –∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª –ó[–î–ï–°–¨]({sup_rules_link}) üëâüìÉ",                                         reply_markup=start_keyboard,                                         parse_mode='Markdown')                elif message.text == "–ó–∞–¥–∞–Ω–∏—è":                    bot.send_message(chat_id=user_id,                                     text='–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π',                                     reply_markup=all_tasks.get_choice_tasks_keyboard())                ###–≤–≤–æ–¥ –ø–æ—á—Ç—ã                elif user.flag == 20:                    if "@gmail.com" in message.text and len(message.text) > 10:                        user.cur_acc["Email"] = str(message.text)                        if services_accounts.get_elem(user.cur_acc["key"]).third_mes != "":                            user.flag = 22                            bot.send_message(chat_id=user_id,                                             text=f"‚ÑπÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞:\n"                                                  f"–ø–∏—à–∏—Ç–µ –±–µ–∑ http –∏ www, –ø–∏—à–∏—Ç–µ —Ç–∞–∫ domen.com",                                             reply_markup=keyboard_loading_accs)                        else:                            user.flag = 21                            bot.send_message(chat_id=user_id,                                             text=f"üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å, –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –±–æ—Ç:\n"                                                  f"(–ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –Ω–∞ –ø–æ—á—Ç–µ –∏ —Å–µ—Ä–≤–∏—Å–∞—Ö)")                    else:                        bot.send_message(chat_id=user_id,                                         text="–û–®–ò–ë–ö–ê: –ù–µ –≤–µ—Ä–Ω—ã–π Email!",                                         reply_markup=keyboard_loading_accs)                ###–≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è                elif user.flag == 21:                    user.flag = 23                    user.cur_acc["password"] = str(message.text)                    if services_accounts.get_elem(user.cur_acc["key"]).third_mes != "":                        bot.send_message(chat_id=user_id,                                         text=f"{services_accounts.data[user.cur_acc['key']].third_mes}",                                         reply_markup=keyboard_loading_accs, disable_web_page_preview=True)                    else:                        bot.send_message(chat_id=user_id,                                         text=f"{services_accounts.data[user.cur_acc['key']].second_mes}",                                         reply_markup=keyboard_loading_accs, disable_web_page_preview=True)                ###–≤–≤–æ–¥ –¥–æ–º–µ–Ω–∞                elif user.flag == 22:                    user.cur_acc["service_name"] = str(message.text)                    user.flag = 21                    bot.send_message(chat_id=user_id,                                     text="üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å, –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –±–æ—Ç:\n"                                          "(–ø–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –Ω–∞ –ø–æ—á—Ç–µ –∏ —Å–µ—Ä–≤–∏—Å–∞—Ö)",                                     reply_markup=keyboard_loading_accs)                ###–≤–≤–æ–¥ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö                elif user.flag == 23:                    user.cur_acc["info"] = str(message.text)                    if "service_name" in user.cur_acc:                        ser_name = user.cur_acc["service_name"]                    else:                        ser_name = user.cur_acc["key"]                    bot.send_message(chat_id=user_id,                                     text=f"–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –≤–Ω–µ—Å–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö?\n"                                          f"–°–µ—Ä–≤–∏—Å: {ser_name}\n"                                          f"Email: {user.cur_acc['Email']}\n"                                          f"{user.cur_acc['info']}",                                     reply_markup=types.InlineKeyboardMarkup(row_width=2).add(                                         types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞ üõë", callback_data="–û—Ç–º–µ–Ω–∞"),                                         types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                                    callback_data="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")).add(                                         types.InlineKeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°",                                                                    callback_data="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°")))                ###–∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É                elif user.flag == 24:                    user.accounts_check[user.chosen_acc[0]]["info"] = str(message.text)                    if user_id in admins.data:                        bot.send_message(chat_id=user_id,                                         text="–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã", reply_markup=start_admin_keyboard)                    else:                        bot.send_message(chat_id=user_id,                                         text="–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã", reply_markup=start_keyboard)                    bot.send_message(chat_id=user_id,                                     text=f"–í–∞—à–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã\n"                                          f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"                                          f" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –í–∞–º–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!",                                     reply_markup=user.keyboard_with_accs())                elif user.flag == 38:                    user.tasks["answer"] = message.text                    bot.send_message(chat_id=user_id,                                     text=f"–í–∞—à –æ—Ç–≤–µ—Ç: {message.text}",                                     reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                         types.InlineKeyboardButton(text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',                                                                    callback_data="send_task_manager"),                                         types.InlineKeyboardButton(text="–∏–∑–º–µ–Ω–∏—Ç—å",                                                                    callback_data="change_task_user")                                     ))                    user.flag = 0                ###–±–ª–æ–∫ –∞–¥–º–∏–Ω–∞                elif user_id in admins.data:                    if message.text == '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å':                        bot.send_message(chat_id=user_id,                                         text='–í—ã –ø–æ–ø–∞–ª–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!\n'                                              '–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:',                                         reply_markup=keyboards_for_admins[admins.get_elem(user_id).admin_lvl])                else:                    if user_id in users.data:                        if user_id in admins.data:                            bot.send_message(chat_id=user_id,                                             text="–Ø —Ö–æ—Ç—å –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Å–≤–æ—ë "                                                  "–æ–±—É—á–µ–Ω–∏–µ, –ø–æ–∫–∞ —è –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –Ω–æ —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ "                                                  "–∏—Å–ø—Ä–∞–≤–ª—é—Å—å!\n–°–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –±–æ—Ç—É, –≤–Ω–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ "                                                  "–æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏, –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞, –Ω–∞ —Ç–∞–∫–∏–µ "                                                  "—Å–æ–æ–±—â–µ–Ω–∏—è –∑–¥–µ—Å—å –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –±–æ—Ç, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, "                                                  "–∑–∞–¥–∞–≤–∞–π—Ç–µ –∏—Ö –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ",                                             reply_markup=start_admin_keyboard)                        else:                            bot.send_message(chat_id=user_id,                                             text="–Ø —Ö–æ—Ç—å –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, –Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Å–≤–æ—ë "                                                  "–æ–±—É—á–µ–Ω–∏–µ, –ø–æ–∫–∞ —è –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –Ω–æ —è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ "                                                  "–∏—Å–ø—Ä–∞–≤–ª—é—Å—å!\n–°–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –±–æ—Ç—É, –≤–Ω–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ "                                                  "–æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏, –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞, –Ω–∞ —Ç–∞–∫–∏–µ "                                                  "—Å–æ–æ–±—â–µ–Ω–∏—è –∑–¥–µ—Å—å –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –±–æ—Ç, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, "                                                  "–∑–∞–¥–∞–≤–∞–π—Ç–µ –∏—Ö –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤ –±–æ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ",                                             reply_markup=start_keyboard)                save_object(users, "users.pkl")            else:                bot.send_message(chat_id=user_id,                                 text="‚ùå‚ùå‚ùå\n–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å, –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ, –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù!\n"                                      "‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è\n-------------\n<strong>O –ø—Ä–∏—á–∏–Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ "                                      "—á–∏—Ç–∞–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ù–∞–ø–∏—à–∏—Ç–µ –≤ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ @VerifSupportBot "                                      "–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏.</strong>\n-------------\n‚ö†Ô∏è –ï—Å–ª–∏ –í—ã –∂–µ–ª–∞–µ—Ç–µ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å "                                      "—Ä–µ—à–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ, –ø–∏—à–∏—Ç–µ –≤ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –¥–∞–π—Ç–µ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ"                                      " —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ—á–µ–º—É –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –í–∞—Å –Ω—É–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å.",                                 parse_mode="HTML")        else:            bot.send_message(chat_id=user_id,                             text="–ù–∞–ø–∏—à–∏—Ç–µ /start")    ###–ü—Ä–æ–≤–µ—Ä–∫–∞ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è    else:        bot.send_message(chat_id=user_id,                         text="–û–®–ò–ë–ö–ê!\n–£–∫–∞–∂–∏—Ç–µ"                              " @username –≤ –í–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ Telegram, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º!")###—É—Å–ª–æ–≤–∏–µ –¥—Ä—É–≥–æ–µ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª–∞–≥@bot.callback_query_handler(func=lambda call: True)def hand(call):    global message_1, all_tasks    user_id = call.from_user.id    user = users.get_elem(user_id)    if user_id in users.data:        if call.from_user.username:            if users.get_user_status(user_id):                if call.from_user.username not in list_username:                    list_username[call.from_user.username] = str(user_id)                    save_data(list_username, "username.json")                ###–∏–∑–º–µ–Ω–∏–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ä–≥–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞                if call.data == "-":                    '''bot.forward_message(chat_id=user_id,                                        from_chat_id=user_id,                                        message_id=call.message.id)'''                    bot.answer_callback_query(callback_query_id=call.id, text="–î–µ–π—Å—Ç–≤–∏–µ –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ",                                              show_alert=True)                elif user.flag not in [25, 27, 43, 46, 47, 48] and call.message.json["chat"]['id'] != -1001516204936:                    bot.edit_message_text(message_id=call.message.id,                                          chat_id=user_id,                                          text=call.message.text,                                          reply_markup=editing_call_keyboard(                                              call.message.json["reply_markup"]["inline_keyboard"]))                if call.data == "back_pay":                    user.payment_method = ""                    bot.edit_message_text(message_id=call.message.id,                                          chat_id=user_id,                                          text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–ø–ª–∞—Ç:\n*–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, –∑–∞–º–µ–Ω–∞ "                                               "—Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–µ–ª–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä—É—á–Ω—É—é!",                                          reply_markup=pay_keyboard)                elif str(call.data) in pay_keyboard_list:                    if user.payment_method == '' or user.flag in [2, 3]:                        r = bot.send_message(chat_id=user_id,                                             text=f'{pay_keyboard_list[str(call.data)]}',                                             reply_markup=back_pay)                        user.bot_messageId = r.id                        user.payment_method = call.data                        if user.flag != 3:                            user.flag = 2                    else:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text='–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ',                                                  show_alert=True)                ###–í—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω                elif call.data in country:                    if f"{call.data}" in user.countries:                        ind = user.countries.index(f"{call.data}")                        del user.countries[ind]                        bot.answer_callback_query(callback_query_id=call.id, text="–í—ã–±–æ—Ä —Å–Ω—è—Ç!",                                                  show_alert=False)                    else:                        user.countries.append(f"{call.data}")                        bot.answer_callback_query(callback_query_id=call.id, text="–í—ã–±—Ä–∞–Ω–æ!",                                                  show_alert=False)                    if len(user.countries) == 0:                        bot.edit_message_text(message_id=call.message.id,                                              chat_id=user_id,                                              text=f'–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –≤–∞—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:',                                              reply_markup=country_keyboard)                    else:                        print(user.__dict__)                        txt = ''                        for i in user.countries:                            txt += i + "\n"                        r = bot.edit_message_text(message_id=call.message.id,                                                  chat_id=user_id,                                                  text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏:\n{txt}',                                                  reply_markup=country_keyboard)                        user.bot_messageId = r.id                ###–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω                elif call.data == 'save':                    if len(user.countries) == 0:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã! "                                                       "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –≤–∞—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:",                                                  show_alert=True)                    else:                        bot.delete_message(chat_id=user_id,                                           message_id=user.bot_messageId)                        bot.send_message(chat_id=user_id,                                         text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É –≤–∞—Å –µ—Å—Ç—å:",                                         reply_markup=document_keyboard)                ###–í—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤                elif call.data in types_documents:                    if f"{call.data}" in user.document_types:                        ind = user.document_types.index(f"{call.data}")                        del user.document_types[ind]                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–í—ã–±–æ—Ä —Å–Ω—è—Ç!",                                                  show_alert=False)                    else:                        user.document_types.append(f"{call.data}")                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–í—ã–±—Ä–∞–Ω–æ!",                                                  show_alert=False)                    if len(user.document_types) == 0:                        bot.edit_message_text(message_id=call.message.id,                                              chat_id=user_id,                                              text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É –≤–∞—Å –µ—Å—Ç—å:",                                              reply_markup=document_keyboard)                    else:                        txt = ''                        for i in user.document_types:                            txt += i + "\n"                        r = bot.edit_message_text(message_id=call.message.id,                                                  chat_id=user_id,                                                  text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏:\n{txt}',                                                  reply_markup=document_keyboard)                        user.bot_messageId = r.id                elif call.data == "save1":                    if len(user.document_types) == 0:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–∏–Ω —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤! –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",                                                  show_alert=True)                    else:                        bot.send_message(chat_id=user_id,                                         text="üôå –í—ã –≤ –æ–¥–Ω–æ–º —à–∞–≥–µ –æ—Ç –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å:\n "                                              "‚ôªÔ∏è –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ - —É–∑–Ω–∞–π –æ —Ä–∞–±–æ—Ç–µ –∏ –æ–ø–ª–∞—Ç–µ\n"                                              "üìö –ü—Ä–∞–≤–∏–ª–∞ –∏ —É—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n"                                              "–ò –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É üü¢ –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É!",                                         reply_markup=subcribe_keyboard)                ###–∫–æ–Ω–µ—Ü —ç—Ç–∞–ø–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏                elif call.data == "ready":                    try:                        m = bot.get_chat_member(chat_id='-1001695261290', user_id=user_id)                        r = bot.get_chat_member(chat_id='-1001558866443', user_id=user_id)                        if m.status != 'left' and r.status != 'left':                            if user_id in admins:                                r = bot.send_message(chat_id=str(user_id), text=start_text,                                                     reply_markup=start_admin_keyboard,                                                     parse_mode='Markdown')                            else:                                r = bot.send_message(chat_id=str(user_id), text=start_text,                                                     reply_markup=start_keyboard,                                                     parse_mode='Markdown')                            user.full_registered = True                            user.bot_messageId = r.id                            user.flag = 0                            user.changing_country_type_document = False                            # user.flag = 1                        else:                            bot.answer_callback_query(callback_query_id=call.id,                                                      text="–ù—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –æ–±–µ –≥—Ä—É–ø–ø—ã!",                                                      show_alert=True)                    except:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–ù—É–∂–Ω–æ –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –Ω–∞ –æ–±–µ –≥—Ä—É–ø–ø—ã!",                                                  show_alert=True)                ###—Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤                elif call.data == "withdraw":                    bot.answer_callback_query(callback_query_id=call.id,                                              text="–ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º",                                              show_alert=True)                    bot.send_message(chat_id=-1001516204936,                                     text=f"user_id: {user_id} \nusername: {call.from_user.username}\n"                                          f"–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—É–º–º—É: {user.balance}",                                     reply_markup=withdraw_keyboard)                elif call.data == "cancel_fio":                    user.flag = 25                    user.complete_name = []                    r = bot.send_message(chat_id=user_id,                                         text=text_ancet,                                         parse_mode='Markdown')                    user.bot_messageId = r.id                ###–∏–∑–º–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è                elif call.data == "edit_user_data":                    user.type_document = []                    user.countries = []                    user.changing_country_type_document = True                    user.flag = 25                    bot.edit_message_text(message_id=call.message.id,                                          chat_id=user_id,                                          text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –≤–∞—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:",                                          reply_markup=country_keyboard)                ###—Ä–µ—Ñ–µ—Ä–∞–ª–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è                elif call.data == "referrals":                    if len(user.referrals_lvl_1) != 0 or len(user.referrals_lvl_2) != 0:                        bot.send_message(chat_id=user_id, text="–í–∞–º–∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω—ã (–ø–æ —É—Ä–æ–≤–Ω—è–º):")                        if len(user.referrals_lvl_1) != 0:                            users_names_lvl_1 = user.referrals_by_lvl_to_str(1)                        else:                            users_names_lvl_1 = "–£—Ä–æ–≤–µ–Ω—å 1:\n–ü—Ä–∏–≤–ª–µ—á—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–Ω—è –Ω–µ—Ç("                        if len(user.referrals_lvl_2) != 0:                            users_names_lvl_2 = user.referrals_by_lvl_to_str(2)                        else:                            users_names_lvl_2 = "–£—Ä–æ–≤–µ–Ω—å 2:\n–ü—Ä–∏–≤–ª–µ—á—ë–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–Ω—è –Ω–µ—Ç("                        bot.send_message(chat_id=user_id, text=users_names_lvl_1)                        bot.send_message(chat_id=user_id, text=users_names_lvl_2)                    else:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–£ –í–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–∏–≤–ª–µ—á—ë–Ω–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞",                                                  show_alert=True)                ###—Å–ª–∞–π–¥–µ—Ä                elif call.data == ">":                    user.current_but = user.current_but + 9                    bot.edit_message_text(message_id=call.message.id, chat_id=user_id,                                          text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê–ö–¢–£–ê–õ–¨–ù–´–• —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ –ó–ê–ö–†–ï–ü–õ–ï–ù–û–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ,"                                               " –≤ –±—É–¥–Ω–∏ —Å 11:00 –¥–æ 19:00 –ú–°–ö.\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",                                          reply_markup=services_accounts.keyboard_init(user))                ###—Å–ª–∞–π–¥–µ—Ä                elif call.data == "<":                    user.current_but = user.current_but - 9                    bot.edit_message_text(message_id=call.message.id, chat_id=user_id,                                          text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê–ö–¢–£–ê–õ–¨–ù–´–• —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ –ó–ê–ö–†–ï–ü–õ–ï–ù–û–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ,"                                               " –≤ –±—É–¥–Ω–∏ —Å 11:00 –¥–æ 19:00 –ú–°–ö.\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",                                          reply_markup=services_accounts.keyboard_init(user))                ###—Å–ª–∞–π–¥–µ—Ä                elif call.data == "!>":                    user.current_acc_but = user.current_acc_but + 9                    bot.edit_message_text(message_id=call.message.id, chat_id=user_id,                                          text=f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê–ö–¢–£–ê–õ–¨–ù–´–• —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ –ó–ê–ö–†–ï–ü–õ–ï–ù–û–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ, "                                               f"–≤ –±—É–¥–Ω–∏ —Å 11:00 –¥–æ 19:00 –ú–°–ö.\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",                                          reply_markup=keyboard_with_accs(str(call.from_user.id)))                ###—Å–ª–∞–π–¥–µ—Ä                elif call.data == "!<":                    user.current_acc_but = user.current_acc_but - 9                    bot.edit_message_text(message_id=call.message.id, chat_id=user_id,                                          text=f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê–ö–¢–£–ê–õ–¨–ù–´–• —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ –ó–ê–ö–†–ï–ü–õ–ï–ù–û–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ, "                                               f"–≤ –±—É–¥–Ω–∏ —Å 11:00 –¥–æ 19:00 –ú–°–ö.\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",                                          reply_markup=keyboard_with_accs(str(call.from_user.id)))                ###–≤—ã–±–æ—Ä –∞–∫–∫–∞—É–Ω—Ç–∞                elif call.data in services_accounts.data:                    user.cur_acc["key"] = call.data                    bot.send_message(chat_id=user_id,                                     text=f"–°–µ—Ä–≤–∏—Å: {call.data}\n{services_accounts.data[str(call.data)].first_mes}",                                     reply_markup=types.InlineKeyboardMarkup().add(                                         types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å", callback_data="–ù–∞—á–∞—Ç—å")).add(                                         types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data="–ù–∞–∑–∞–¥ üîô")))                elif call.data == "–ù–∞—á–∞—Ç—å":                    user.flag = 20                    bot.send_message(chat_id=user_id,                                     text=f"üìß –í–≤–µ–¥–∏—Ç–µ Email, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è —Å–µ—Ä–≤–∏—Å, "                                          f"–≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –±–æ—Ç:",                                     reply_markup=keyboard_loading_accs)                elif call.data == "–ù–∞–∑–∞–¥ üîô":                    bot.send_message(chat_id=user_id,                                     text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ê–ö–¢–£–ê–õ–¨–ù–´–• —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ –ó–ê–ö–†–ï–ü–õ–ï–ù–û–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ, –≤ –±—É–¥–Ω–∏"                                          " —Å 11:00 –¥–æ 19:00 –ú–°–ö.\n–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:",                                     reply_markup=services_accounts.keyboard_init(user))                elif call.data == "–û—Ç–º–µ–Ω–∞":                    user.flag = 0                    bot.send_message(chat_id=user_id, text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")                    bot.send_message(chat_id=user_id,                                     text=start_text,                                     parse_mode='Markdown')                elif call.data == "–û—Ç–º–µ–Ω–∞ üõë":                    user.flag = 0                    user.cur_acc = {"key": user.cur_acc["key"]}                    bot.send_message(chat_id=user_id,                                     text=f"–°–µ—Ä–≤–∏—Å: {user.cur_acc['key']}\n"                                          f"{services_accounts.data[user.cur_acc['key']].first_mes}",                                     reply_markup=types.InlineKeyboardMarkup().add(                                         types.InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å", callback_data="–ù–∞—á–∞—Ç—å")).add(                                         types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data="–ù–∞–∑–∞–¥ üîô")))                elif call.data == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üè°":                    user.flag = 0                    bot.send_message(chat_id=user_id,                                     text=start_text,                                     parse_mode='Markdown')                ###–æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º                elif call.data == "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å":                    user.accounts_check[str(call.message.id)] = user.cur_acc                    if "service_name" in user.cur_acc:                        service = user.cur_acc["service_name"]                    else:                        service = user.cur_acc["key"]                    user.count_no_verified_accs += 1                    bot.send_message(chat_id=user_id,                                     text=f"–î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞ {service} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!\n"                                          f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –ê–ö–¢–£–ê–õ–¨–ù–´–• —Å–µ—Ä–≤–∏—Å–æ–≤ –∏–∑ –ó–ê–ö–†–ï–ü–õ–ï–ù–û–ì–û —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ,\n"                                          f"–≤ –±—É–¥–Ω–∏ —Å 11:00 –¥–æ 19:00 –ú–°–ö.\n–í –≤—ã—Ö–æ–¥–Ω—ã–µ –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ –º—ã –æ—Ç–¥—ã—Ö–∞–µ–º!")                    app_number = str(call.message.id)                    email = user.accounts_check[str(call.message.id)]["Email"]                    password = user.accounts_check[str(call.message.id)]["password"]                    other_info = user.accounts_check[str(call.message.id)]["info"]                    if user.balance < user.earnings:                        txt = f"id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}\n" \                              f"–Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {app_number}\n" \                              f"—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω—ã –≤—ã–≤–æ–¥—ã —Å—Ä–µ–¥—Å—Ç–≤\n" \                              f"domen: {service}\n" \                              f"email: {email}\n" \                              f"–ø–∞—Ä–æ–ª—å: {password}\n" \                              f"–æ—Å—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: \n{other_info}"                    else:                        txt = f"id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}\n" \                              f"–Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {app_number}\n" \                              f"—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –±—ã–ª–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω—ã –≤—ã–≤–æ–¥—ã —Å—Ä–µ–¥—Å—Ç–≤\n" \                              f"domen: {service}\n" \                              f"email: {email}\n" \                              f"–ø–∞—Ä–æ–ª—å: {password}\n" \                              f"–æ—Å—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: \n{other_info}"                    bot.send_message(chat_id=-1001516204936,                                     text=txt,                                     reply_markup=manager_keyboard)                elif call.data == "–ù–∞–∑–∞–¥ ‚¨ÜÔ∏è":                    user.flag = 0                    bot.send_message(chat_id=user_id,                                     text=f"–í–∞—à–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã\n"                                          f"–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å/—É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö "                                          f"–í–∞–º–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É!",                                     reply_markup=keyboard_with_accs(str(user_id)))                elif call.data == "–ò–∑–º–µ–Ω–∏—Ç—å üñä":                    user.flag = 24                    service_account = services_accounts.get_elem(user.chosen_acc[0])                    if service_account.third_mes == "":                        resp = service_account.second_mes                    else:                        resp = service_account.third_mes                    bot.send_message(chat_id=user_id,                                     text=f"–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ "                                          f"‚Ññ{user.chosen_acc[0]} "                                          f"–¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ {user.chosen_acc[1]}:\n\n"                                          f"{resp}",                                     reply_markup=types.InlineKeyboardMarkup().add(                                         types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚¨ÜÔ∏è", callback_data="–ù–∞–∑–∞–¥ ‚¨ÜÔ∏è")),                                     disable_web_page_preview=True)                elif call.data == "–£–¥–∞–ª–∏—Ç—å üóë":                    bot.send_message(chat_id=user_id,                                     text=f"–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É ‚Ññ"                                          f"{user.chosen_acc[0]}?\n"                                          f"–°–µ—Ä–≤–∏—Å: {user.chosen_acc[1]}\n"                                          f"Email: {user.accounts_check[user.chosen_acc[0]]['Email']}",                                     reply_markup=types.InlineKeyboardMarkup(row_width=2).add(                                         types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞ üõë", callback_data="–ù–∞–∑–∞–¥ ‚¨ÜÔ∏è"),                                         types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å ‚úÖ",                                                                    callback_data="–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç")))                elif call.data == "–£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç":                    del user.accounts_check[user.chosen_acc[0]]                    if call.from_user_id in admins:                        bot.send_message(chat_id=user_id,                                         text=start_text,                                         parse_mode='Markdown',                                         reply_markup=start_admin_keyboard)                        bot.answer_callback_query(callback_query_id=call.id, text="–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.",                                                  show_alert=True)                    else:                        bot.send_message(chat_id=user_id,                                         text=start_text,                                         parse_mode='Markdown',                                         reply_markup=start_keyboard)                        bot.answer_callback_query(callback_query_id=call.id, text="–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.",                                                  show_alert=True)                elif "‚Ññ" in call.data:                    service = str(call.data).replace(f"{str(call.data).split(' ')[0]}", '').replace(' ', '')                    user.chosen_acc = [str(call.data).split(' ')[0].replace('‚Ññ', ''), service]                    bot.send_message(chat_id=user_id,                                     text=f"–í—ã–±—Ä–∞–Ω–∞ –∑–∞—è–≤–∫–∞ {str(call.data).split(' ')[0]}\n–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: {service}",                                     reply_markup=types.InlineKeyboardMarkup(row_width=2).add(                                         types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å üñä", callback_data="–ò–∑–º–µ–Ω–∏—Ç—å üñä"),                                         types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å üóë", callback_data="–£–¥–∞–ª–∏—Ç—å üóë")).add(                                         types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚¨ÜÔ∏è", callback_data="–ù–∞–∑–∞–¥ ‚¨ÜÔ∏è")))                elif call.data == 'edit_payment_account':                    if user.date_edit_payment == "":                        user.changing_payment = True                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–ú–µ–Ω—è—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤—ã–ø–ª–∞—Ç –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ 6 –º–µ—Å—è—Ü–µ–≤",                                                  show_alert=True)                        bot.send_message(chat_id=user_id,                                         text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–ø–ª–∞—Ç:\n*–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, –∑–∞–º–µ–Ω–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ "                                              "–¥–µ–ª–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä—É—á–Ω—É—é!",                                         reply_markup=pay_keyboard)                        user.flag = 3                    else:                        time_ = datetime.datetime.today().strftime("%Y.%m").split('.')                        time_1 = user.date_edit_payment.split('.')                        year, year_1 = int(time_[0]), int(time_1[0])                        month, month_1 = int(time_[1]), int(time_1[1])                        if year <= year_1 and ((month - month_1 >= 6) or (month_1 - month >= 6)):                            user.changing_payment = True                            bot.answer_callback_query(callback_query_id=call.id,                                                      text="–ú–µ–Ω—è—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤—ã–ø–ª–∞—Ç –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ 6 –º–µ—Å—è—Ü–µ–≤",                                                      show_alert=True)                            bot.send_message(chat_id=user_id,                                             text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–ø–ª–∞—Ç:\n*–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, "                                                  "–∑–∞–º–µ–Ω–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–µ–ª–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä—É—á–Ω—É—é!",                                             reply_markup=pay_keyboard)                            user.flag = 3                        else:                            bot.answer_callback_query(callback_query_id=call.id,                                                      text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é 6 –º–µ—Å—è—Ü–µ–≤ –µ—â—ë –Ω–µ –ø—Ä–æ—à–ª–æ!",                                                      show_alert=False)                elif call.data == "edit_complete_name":                    user.previous_complete_name = user.complete_name                    user.complete_name = []                    user.changing_complete_name = True                    user.flag = 25                    r = bot.send_message(chat_id=user_id,                                         text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –§–ò–û\nüñå –í–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –Ω–∏–∂–µ ‚¨áÔ∏è"                                              "\n–ù–∞–ø—Ä–∏–º–µ—Ä: Taylor / Sergeevsky")                    user.bot_messageId = r.id                elif call.data == "edit_complete_name_element":                    user.flag = 25                    if len(user.complete_name) == 1:                        user.complete_name = []                        r = bot.edit_message_text(chat_id=user_id, message_id=call.message.id,                                                  text="üñå –í–≤–µ–¥–∏—Ç–µ –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –Ω–∏–∂–µ ‚¨áÔ∏è\n"                                                       "–ù–∞–ø—Ä–∏–º–µ—Ä: Taylor / Sergeevsky")                        user.bot_messageId = r.id                    elif len(user.complete_name) == 2:                        del user.complete_name[-1]                        r = bot.edit_message_text(chat_id=user_id, message_id=call.message.id,                                                  text="üñå –í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –Ω–∏–∂–µ ‚¨áÔ∏è\n"                                                       "–ù–∞–ø—Ä–∏–º–µ—Ä, Mark / Ivan")                        user.bot_messageId = r.id                    elif len(user.complete_name) == 3:                        del user.complete_name[-1]                        r = bot.edit_message_text(chat_id=user_id, message_id=call.message.id,                                                  text="üñå –í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –æ—Ç—á–µ—Å—Ç–≤–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º ‚¨áÔ∏è"                                                       "\n–ù–∞–ø—Ä–∏–º–µ—Ä: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∞–Ω–≥–ª —è–∑—ã–∫–µ / Sergeevich")                        user.bot_messageId = r.id                elif call.data == 'edit_payment_acc_step_back':                    if user.flag == 28:                        user.flag = 2                    else:                        user.flag = 3                    bot.send_message(chat_id=user_id,                                     text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—ã–ø–ª–∞—Ç:\n*–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, –∑–∞–º–µ–Ω–∞ "                                          "—Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–µ–ª–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä—É—á–Ω—É—é!",                                     reply_markup=pay_keyboard)                elif call.data == "next_step_in_reg":                    print(user.flag)                    ''''''                    if user.flag == 28:                        user.flag = 25                        bot.send_message(chat_id=user_id,                                         text="–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –≤–∞—à–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:",                                         reply_markup=country_keyboard)                    elif user.flag == 29:                        time = datetime.datetime.today().strftime("%Y.%m")                        user.changing_payment = False                        user.date_edit_payment = time                        user.flag = 0                        if user_id in admins:                            r = bot.send_message(chat_id=str(call.from_user.id), text=start_text,                                                 reply_markup=start_admin_keyboard)                        else:                            r = bot.send_message(chat_id=str(call.from_user.id), text=start_text,                                                 reply_markup=start_keyboard)                        user.bot_messageId = r.id                        users.count_requisites += 1                    elif len(user.complete_name) == 1:                        user.flag = 25                        r = bot.edit_message_text(chat_id=user_id, message_id=call.message.id,                                                  text="üñå –í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –Ω–∏–∂–µ ‚¨áÔ∏è\n"                                                       "–ù–∞–ø—Ä–∏–º–µ—Ä, Mark / Ivan")                        user.bot_messageId = r.id                    elif len(user.complete_name) == 2:                        user.flag = 25                        r = bot.edit_message_text(chat_id=user_id, message_id=call.message.id,                                                  text="üñå –í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –æ—Ç—á–µ—Å—Ç–≤–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º ‚¨áÔ∏è"                                                       "\n–ù–∞–ø—Ä–∏–º–µ—Ä: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –∞–Ω–≥–ª —è–∑—ã–∫–µ / Sergeevich")                        user.bot_messageId = r.id                    elif len(user.complete_name) == 3:                        bot.edit_message_reply_markup(chat_id=user_id, message_id=call.message.id,                                                      reply_markup=None)                        if user.payment_method == "":                            user.flag = 25                            bot.send_message(chat_id=user_id,                                             text="üí∞–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞—à–µ–≥–æ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è:\n"                                                  "*–ë—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã, –∑–∞–º–µ–Ω–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –¥–µ–ª–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤—Ä—É—á–Ω—É—é!",                                             reply_markup=pay_keyboard)                        else:                            user.changing_complete_name = False                            user.flag = 0                            user_name = call.from_user.username                            user_id = str(call.from_user.id)                            if call.from_user.first_name is None:                                first_name = ''                            else:                                first_name = str(call.from_user.first_name) + ' '                            if call.from_user.last_name is None:                                last_name = ''                            else:                                last_name = str(call.from_user.last_name)                            registration_date = user.registration_date                            if user.payment_method == "QIWI":                                requisites = user.payment_account + " (Qiwi üì≤)"                            else:                                requisites = user.payment_account                            country_docs = user.get_str_countries_and_document_types()                            full_name = user.complete_name[0] + " " + user.complete_name[1] + " " + user.complete_name[                                2]                            user_balance = user.balance                            bot.send_message(chat_id=user_id,                                             text=f"`{first_name + last_name}`, —ç—Ç–æ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å!\n"                                                  f"üÜî –í–∞—à id: `{user_id}`\n"                                                  f"üë§ –í–∞—à –ª–æ–≥–∏–Ω: `@{user_name}`\n"                                                  f"üìù –§–ò–û —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –∞–Ω–∫–µ—Ç–µ: `{full_name}`\n"                                                  f"‚úÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: *{registration_date}*\n"                                                  f"üåç –°—Ç—Ä–∞–Ω–∞: *{country_docs['countries']}*\n"                                                  f"üìÇ –î–æ–∫—É–º–µ–Ω—Ç—ã: *{country_docs['document_types']}*\n"                                                  f"üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –≤—ã–ø–ª–∞—Ç: `{requisites}`\n"                                                  f"üí∞–í–∞—à –±–∞–ª–∞–Ω—Å: *{user_balance} —Ä—É–±*",                                             reply_markup=profile_keyboard,                                             parse_mode="Markdown")                elif call.data == "fire_task_user":                    user.flag = 46                    user.count_tasks_keyboard = 0                    keyboard = all_tasks.get_fire_tasks_keyboard()                    if len(keyboard.keyboard) != 0:                        bot.delete_message(chat_id=call.from_user.id,                                           message_id=call.message.id)                        bot.send_message(chat_id=call.from_user.id,                                         text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                                         reply_markup=all_tasks.slider_keyboard(keyboard, 0))                    else:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏–π –Ω–µ—Ç")                elif call.data == "all_task_user":                    user.flag = 43                    user.count_tasks_keyboard = 0                    keyboard = all_tasks.get_actual_tasks_keyboard()                    if len(keyboard.keyboard) != 0:                        bot.delete_message(chat_id=call.from_user.id,                                           message_id=call.message.id)                        bot.send_message(chat_id=call.from_user.id,                                         text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                                         reply_markup=all_tasks.slider_keyboard(keyboard, 0))                    else:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏–π –Ω–µ—Ç")                elif call.data == "task_time_user":                    user.flag = 47                    user.count_tasks_keyboard = 0                    keyboard = all_tasks.get_time_tasks_keyboard()                    if len(keyboard.keyboard) != 0:                        bot.delete_message(chat_id=call.from_user.id,                                           message_id=call.message.id)                        bot.send_message(chat_id=call.from_user.id,                                         text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                                         reply_markup=all_tasks.slider_keyboard(keyboard, 0))                    else:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏–π –Ω–µ—Ç")                elif call.data == "task_seats_user":                    user.flag = 48                    user.count_tasks_keyboard = 0                    keyboard = all_tasks.get_seats_tasks_keyboard()                    if len(keyboard.keyboard) != 0:                        bot.delete_message(chat_id=call.from_user.id,                                           message_id=call.message.id)                        bot.send_message(chat_id=call.from_user.id,                                         text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                                         reply_markup=all_tasks.slider_keyboard(keyboard, 0))                    else:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –∑–∞–¥–∞–Ω–∏–π –Ω–µ—Ç")                elif call.data == "back_in_choice_task_user":                    bot.send_message(chat_id=call.from_user.id,                                     text='–í—ã–±–µ—Ä–∏—Ç–µ:',                                     reply_markup=all_tasks.get_choice_tasks_keyboard())                elif call.data == "change_task_user":                    user.flag = 38                    bot.send_message(chat_id=call.from_user.id,                                     text=f"–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",                                     reply_markup=types.InlineKeyboardMarkup().add(                                         types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                                    callback_data="back_in_choice_task_user")))                elif call.data == "send_task_manager":                    # user_id, instruction, filter                    now = datetime.datetime.today()                    task = all_tasks.get_actual_tasks()[                        user.task_id]  # users_bd[str(call.from_user.id)]['tasks']['id_task']]                    check1 = task.get_send_seats() is None                    check2 = task.get_end_time_task() is None                    check3 = None                    check4 = None                    if not check1:                        check3 = task.get_send_seats() != task.get_seats()                    if not check2:                        check4 = task.get_end_time_task() > datetime.datetime(year=int(now.strftime("%Y")),                                                                              month=int(now.strftime("%m")),                                                                              day=int(now.strftime("%d")),                                                                              hour=int(now.strftime("%H")),                                                                              minute=int(now.strftime("%M")))                    if check3 is not None and not check3:                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–£–∂–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª-–≤–æ –æ—Ç–≤–µ—Ç–æ–≤. –ù–æ –µ—â—ë –Ω–µ –≤—Å–µ "                                                       "–æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã. –ó–∞—Ö–æ–¥–∏—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ, –º–µ—Å—Ç–∞ –º–æ–≥—É—Ç –ø–æ–≤–∏—Ç—å—Å—è",                                                  show_alert=True)                    if check4 is not None and not check4:                        all_tasks -= user.task_id  # users_bd[str(call.from_user.id)]['tasks']['id_task']                        bot.answer_callback_query(callback_query_id=call.id,                                                  text='–í—Ä–µ–º—è –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ç–≤–µ—Ç–∞ –∏—Å—Ç–µ–∫–ª–æ',                                                  show_alert=True)                    # print(check1, '\n', check2, '\n', check3, '\n', check4)                    if (check1 and check2 and check3 is None and check4 is None) or (                            check1 and not check2 and check3 is None and check4 is None) or (                            not check1 and not check2 and check3 and check4 is None) or (                            not check1 and not check2 and check3 is None and check4) or (                            not check1 and not check2 and check3 and check4):                        if not check1:                            task.change_send_seats()                        mes = f"id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {call.from_user.id}\n" \                              f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∑–∞–¥–∞–Ω–∏—è:\n{task.get_str_task()}\n" \                              f"–û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.task_answer}"                        bot.edit_message_text(chat_id=call.from_user.id,                                              message_id=call.message.id,                                              text='–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π',                                              reply_markup=all_tasks.get_choice_tasks_keyboard())                        bot.answer_callback_query(callback_query_id=call.id,                                                  text="–í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")                        bot.send_message(chat_id=-1001516204936,                                         text=mes,                                         reply_markup=types.InlineKeyboardMarkup().add(                                             types.InlineKeyboardButton(text="–≤–∑—è—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ",                                                                        callback_data="check_test_manager")))                elif call.data.isdigit():                    if int(call.data) in all_tasks.get_actual_tasks() or int(call.data) in all_tasks.get_past_tasks():                        user.task_to_some_act = int(call.data)                        if user.flag == 42:                            bot.send_message(chat_id=call.from_user.id,                                             text=f"–ó–∞–¥–∞–Ω–∏–µ:\n"                                                  f"{all_tasks.get_actual_tasks()[int(call.data)].get_str_task()}",                                             reply_markup=act_del_task)                        elif user.flag == 45:                            bot.send_message(chat_id=call.from_user.id,                                             text=f"–ó–∞–¥–∞–Ω–∏–µ:\n"                                                  f"{all_tasks.get_past_tasks()[int(call.data)].get_str_task()}",                                             reply_markup=act_past_task)                        elif user.flag in [43, 46, 47, 48]:                            task = all_tasks.get_actual_tasks()[int(call.data)].get_str_task()                            user.flag = 38                            user.task_id = int(call.data)                            bot.send_message(chat_id=call.from_user.id,                                             text=f"{task}",                                             reply_markup=types.InlineKeyboardMarkup().add(                                                 types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                                            callback_data="back_in_choice_task_user")))                save_object(users, 'users.pkl')            else:                bot.send_message(chat_id=user_id, text="‚ùå‚ùå‚ùå\n–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å, –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ, "                                                       "–ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù!\n‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è\nO –ø—Ä–∏—á–∏–Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–∏—Ç–∞–π—Ç–µ "                                                       "–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. \n-------------\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ù–∞–ø–∏—à–∏—Ç–µ –≤ "                                                       "–±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ @VerifSupportBot –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ "                                                       "–ª–∏—á–Ω–æ—Å—Ç–∏.\n-------------\n–ï—Å–ª–∏ –í—ã –∂–µ–ª–∞–µ—Ç–µ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å "                                                       "—Ä–µ—à–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ, –ø–∏—à–∏—Ç–µ –≤ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏, "                                                       "–¥–∞–π—Ç–µ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ—á–µ–º—É "                                                       "–í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –í–∞—Å –Ω—É–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å.\n–ë–æ—Ç "                                                       "–ø–æ–¥–¥–µ—Ä–∂–∫–∏ ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è @VerifSupportBot")        ###–ü—Ä–æ–≤–µ—Ä–∫–∞ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è        else:            bot.send_message(chat_id=user_id,                             text="–û–®–ò–ë–ö–ê!\n–£–∫–∞–∂–∏—Ç–µ"                                  " @username –≤ –í–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ Telegram, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º!")###—É—Å–ª–æ–≤–∏–µ –¥—Ä—É–≥–æ–µ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª–∞–≥@bot.callback_query_handler(func=lambda call: True)def man(call):    global all_tasks    user_id = call.from_user.id    manager = managers.get_elem(user_id)    if user_id not in managers.data:        managers.add_elem(user_id)        manager = managers.get_elem(user_id)    ###—Ä–∞–±–æ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏    if call.data == "check_test_manager":        mes = call.message.text.replace('\n', ' ').split(' ')        manager.accounts_to_check.append([mes[2], call.message.id, int(mes[6].strip("‚Ññ"))])        bot.send_message(chat_id=mes[2],                         text=f"‚ôª –í–∞—à–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ {mes[6]} –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è\n")        bot.edit_message_text(chat_id=-1001516204936,                              message_id=call.message.id,                              text=f"–≠—Ç–∞ –∑–∞—è–≤–∫–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è @{call.from_user.username}\n{call.message.text}",                              reply_markup=types.InlineKeyboardMarkup().add(                                  types.InlineKeyboardButton(text="–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                             callback_data="confirm_task_manager"),                                  types.InlineKeyboardButton(text="–æ—Ç–∫–ª–æ–Ω–∏—Ç—å",                                                             callback_data="deny_task_manager")                              ))    elif call.data == "confirm_task_manager":        flag = False        for id in managers.data:            manager = managers.get_elem(id)            for mes_id in manager.accounts_to_check:                if int(mes_id[1]) == int(call.message.message_id) and int(id) == int(user_id):                    flag = True                    bot.delete_message(chat_id=-1001516204936,                                       message_id=call.message.message_id)                    bot.answer_callback_query(callback_query_id=call.id,                                              text='–ü–û–î–¢–í–ï–†–ñ–ï–ù–û',                                              show_alert=True)                    bot.send_message(chat_id=mes_id[0],                                     text=f"–í–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ{mes_id[2]} –±—ã–ª –ø—Ä–∏–Ω—è—Ç")                    user = users.get_elem(mes_id[0])                    user.earnings += all_tasks.get_actual_tasks()[mes_id[2]].get_cost()                    user.balance += all_tasks.get_actual_tasks()[mes_id[2]].get_cost()                    all_tasks.get_actual_tasks()[mes_id[2]].change_confirm_seats()                    if int(all_tasks.get_actual_tasks()[mes_id[2]].get_confirm_seats()) == int(                            all_tasks.get_actual_tasks()[mes_id[2]].get_seats()):                        all_tasks -= mes_id[2]                    ind = manager.accounts_to_check.index(mes_id)                    del manager.accounts_to_check[ind]        if not flag:            bot.answer_callback_query(callback_query_id=call.id,                                      text="–≠—Ç—É –∑–∞—è–≤–∫—É —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä",                                      show_alert=True)    elif call.data == "deny_task_manager":        flag = False        for id in managers.data:            manager = managers.get_elem(id)            for mes_id in manager.accounts_to_check:                if int(mes_id[1]) == int(call.message.message_id) and int(id) == int(user_id):                    flag = True                    ind = manager.accounts_to_check.index(mes_id)                    del manager.accounts_to_check[ind]                    bot.delete_message(chat_id=-1001516204936,                                       message_id=call.message.message_id)                    bot.answer_callback_query(callback_query_id=call.id, text='–û–¢–ö–õ–û–ù–ï–ù–û',                                              show_alert=True)                    bot.send_message(chat_id=mes_id[0],                                     text=f"‚ùóÔ∏è –í–∞—à –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ{mes_id[2]} –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω")                    all_tasks.get_actual_tasks()[mes_id[2]].change_send_seats()        if not flag:            bot.answer_callback_query(callback_query_id=call.id,                                      text="–≠—Ç—É –∑–∞—è–≤–∫—É —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä",                                      show_alert=True)    ###–≤–∑—è—Ç–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∑–∞—è–≤–∫—É –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ    elif call.data == "check_acc":        mes = call.message.text.replace('\n', ' ').split(' ')        manager.accounts_to_check.append([mes[2], mes[5], call.message.id])        bot.send_message(chat_id=mes[2],                         text=f"‚ôª –í–∞—à–∞ –∑–∞—è–≤–∫–∞ ‚Ññ{mes[5]} –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è!\n"                              f"–°–µ—Ä–≤–∏—Å: {mes[7]}\n"                              f"–ü–æ—á—Ç–∞: {mes[9]}\n"                              f"–í–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏:\n1Ô∏è‚É£ –í—ã–π–¥–∏—Ç–µ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å–µ—Ä–≤–∏—Å–∞ –∏ –ø–æ—á—Ç—ã!\n2Ô∏è‚É£ "                              f"–ù–µ –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –Ω–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏!\n‚ùóÔ∏è"                              f"–õ—é–±—ã–µ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–ª—å–∫–æ –ø–æ –ø—Ä–æ—Å—å–±–µ –ø—Ä–æ–≤–µ—Ä—è—é—â–µ–≥–æ")        bot.edit_message_text(chat_id=-1001516204936,                              message_id=call.message.id,                              text=f"–≠—Ç–∞ –∑–∞—è–≤–∫–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è @{call.from_user.username}\n{call.message.text}",                              reply_markup=manager_keyboard_2)    ###–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º    elif call.data == 'accepted':        flag = False        for id in managers.data:            manager = managers.get_elem(id)            for mes_id in manager.accounts_to_check:                if int(mes_id[2]) == int(call.message.message_id) and int(id) == int(user_id):                    flag = True                    bot.delete_message(chat_id=-1001516204936,                                       message_id=call.message.message_id)                    bot.answer_callback_query(callback_query_id=call.id, text='–ü–û–î–¢–í–ï–†–ñ–ï–ù–û',                                              show_alert=True)                    user = users.get_elem(mes_id[0])                    user.count_verified_paid_accs += 1                    user.count_no_verified_accs -= 1                    ###—Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω—É–∂–Ω–æ –ø–æ–¥—Ç—è–≥–∏–≤–∞—Ç—å –∏–∑ –∞–¥–º–∏–Ω–∫–∏                    amount = 100                    user.balance += amount                    user.earnings += amount                    bot.send_message(chat_id=mes_id[0],                                     text=f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ ‚Ññ{mes_id[1]} –±—ã–ª–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–µ–Ω–∞")                    if (10000 >= user.earnings > 30000) and (user.referral_status != 'individual'):                        user.referral_status = "–ü–∞—Ä—Ç–Ω–µ—Ä"                        user.reward_lvl_1 = 10                        user.reward_lvl_2 = 3                    elif (user.earnings >= 30000) and (user.referral_status != 'individual'):                        user.referral_status = "–ú–∞—Å—Ç–µ—Ä"                        user.reward_lvl_1 = 15                        user.reward_lvl_2 = 5                    users.referral_profit(mes_id[0], amount)                    del user.accounts_check[mes_id[1]]                    ind = manager.accounts_to_check.index(mes_id)                    del manager.accounts_to_check[ind]        if not flag:            bot.answer_callback_query(callback_query_id=call.id,                                      text="–≠—Ç—É –∑–∞—è–≤–∫—É —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä",                                      show_alert=True)    ###–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º    elif call.data == 'deny':        flag = False        for id in managers.data:            manager = managers.get_elem(id)            for mes_id in manager.accounts_to_check:                if int(mes_id[2]) == int(call.message.message_id) and int(id) == int(user_id):                    flag = True                    user = users.get_elem(mes_id[0])                    user.count_verified_rejected_accs += 1                    user.count_no_verified_accs -= 1                    del user.accounts_check[mes_id[1]]                    ind = manager.accounts_to_check.index(mes_id)                    del manager.accounts_to_check[ind]                    bot.delete_message(chat_id=-1001516204936,                                       message_id=call.message.message_id)                    bot.answer_callback_query(callback_query_id=call.id, text='–û–¢–ö–õ–û–ù–ï–ù–û',                                              show_alert=True)                    bot.send_message(chat_id=mes_id[0],                                     text=f"‚ùóÔ∏è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ ‚Ññ{mes_id[1]} –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")        if not flag:            bot.answer_callback_query(callback_query_id=call.id,                                      text="–≠—Ç—É –∑–∞—è–≤–∫—É —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä",                                      show_alert=True)    ###–≤–∑—è—Ç–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤    elif call.data == "check_withdraw":        mes = call.message.text.replace('\n', ' ').split(' ')        user_id = mes[1]        manager.withdraw.append([user_id])        bot.edit_message_text(chat_id=-1001516204936,                              message_id=call.message.id,                              text=f"–≠—Ç–∞ –∑–∞—è–≤–∫–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è @{call.from_user.username}\n{call.message.text}",                              reply_markup=withdraw_keyboard_2)    ###–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤    elif call.data == "complete_withdraw":        flag = False        for id in managers.data:            manager = managers.get_elem(id)            for mes_id in manager.withdraw:                if int(mes_id[0]) == int(call.message.message_id) and int(id) == int(user_id):                    flag = True                    user = users.get_elem(mes_id[0])                    user.balance = 0                    bot.delete_message(chat_id=-1001516204936,                                       message_id=call.message.message_id)                    bot.send_message(chat_id=mes_id[0],                                     text=f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –±—ã–ª–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–µ–Ω–∞")                    ind = manager.withdraw.index(mes_id)                    del manager.withdraw[ind]        if not flag:            bot.answer_callback_query(callback_query_id=call.id,                                      text="–≠—Ç—É –∑–∞—è–≤–∫—É —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä",                                      show_alert=True)    ###–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤    elif call.data == "deny_withdraw":        flag = False        for id in managers.data:            manager = managers.get_elem(id)            for mes_id in manager.withdraw:                if int(mes_id[0]) == int(call.message.message_id) and int(id) == int(user_id):                    flag = True                    bot.delete_message(chat_id=-1001516204936,                                       message_id=call.message.message_id)                    bot.send_message(chat_id=mes_id[0],                                     text=f"‚ùóÔ∏è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")                    ind = manager.withdraw.index(mes_id)                    del manager.withdraw[ind]        if not flag:            bot.answer_callback_query(callback_query_id=call.id,                                      text="–≠—Ç—É –∑–∞—è–≤–∫—É —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥—Ä—É–≥–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä",                                      show_alert=True)    ###–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è    elif call.data == "block_user":        for id in managers.data:            manager = managers.get_elem(id)            for mes_id in manager.accounts_to_check:                if int(mes_id[0]) == int(call.message.message_id) and int(id) == int(user_id):                    bot.send_message(chat_id=mes_id[1], text="‚ùå‚ùå‚ùå\n–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å, –≤ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ, "                                                             "–ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù!\n‚õîÔ∏è‚õîÔ∏è‚õîÔ∏è\nO –ø—Ä–∏—á–∏–Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —á–∏—Ç–∞–π—Ç–µ "                                                             "–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. \n-------------\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: –ù–∞–ø–∏—à–∏—Ç–µ "                                                             "–≤ –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ @VerifSupportBot –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ "                                                             "–ª–∏—á–Ω–æ—Å—Ç–∏.\n-------------\n–ï—Å–ª–∏ –í—ã –∂–µ–ª–∞–µ—Ç–µ "                                                             "–æ–±–∂–∞–ª–æ–≤–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ, –ø–∏—à–∏—Ç–µ –≤ –±–æ—Ç "                                                             "–ø–æ–¥–¥–µ—Ä–∂–∫–∏, –¥–∞–π—Ç–µ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ "                                                             "–Ω–∞–ø–∏—à–∏—Ç–µ –ø–æ—á–µ–º—É –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –í–∞—Å –Ω—É–∂–Ω–æ "                                                             "—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å.\n–ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è "                                                             "@VerifSupportBot")                    user = users.get_elem(mes_id[1])                    user.status = False    save_object(managers, "managers.pkl")###—É—Å–ª–æ–≤–∏–µ –¥—Ä—É–≥–æ–µ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª–∞–≥@bot.message_handler(func=lambda message: message.from_user.id in admins)def message_admin(message):    global task1, pay_keyboard_for_admin    user_id = message.from_user.id    admin = admins.get_elem(user_id)    ###–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏(—Ç–µ–ª–µ–≥—Ä–∞—Ñ)    if admin.flag in [5, 6]:        bot.delete_message(chat_id=user_id,                           message_id=message.id)        if admin.telegraph_name == "":            admin.telegraph_name = message.text            if admin.flag == 6:                txt = f'–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: {admin.telegraph_name}\n' \                      f'–î–µ–π—Å—Ç–≤–∏–µ: {admin.telegraph_action}\n(0-–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, ' \                      f'1 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ, 2 - —É–¥–∞–ª–µ–Ω–∏–µ)'                bot.edit_message_text(chat_id=user_id,                                      message_id=admin.message_id,                                      text=txt,                                      reply_markup=action_insrt)            else:                bot.edit_message_text(chat_id=user_id,                                      message_id=admin.message_id,                                      text='–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!\n–í–≤–µ–¥–∏—Ç–µ url',                                      reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                          types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='append_url')))        else:            admin.telegraph_url = message.text            txt = f'–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: {admin.telegraph_name}\n' \                  f'–°—Å—ã–ª–∫–∞: {admin.telegraph_url}\n' \                  f'–î–µ–π—Å—Ç–≤–∏–µ: {admin.telegraph_action}\n(0 - –∏–∑–º–µ–Ω–µ–Ω–∏–µ, ' \                  f'1 - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, 2 - —É–¥–∞–ª–µ–Ω–∏–µ)'            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=txt,                                  reply_markup=action_insrt)    ###—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞/—É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞    elif admin.flag in [9, 10, 11]:        ###–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞        bot.delete_message(chat_id=user_id, message_id=message.id)        if admin.edit_acc_name == "" and admin.flag == 9:            ####bot.delete_message(chat_id=user_id,message_id=message.id)            admin.edit_acc_name = message.text            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–æ—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è",                                                                 callback_data='back_main_admin')))        elif admin.edit_acc_name != "" and admin.edit_acc_first_mes == "" and admin.flag == 9:            admin.edit_acc_first_mes = message.text            ####bot.delete_message(chat_id=user_id,message_id=message.id)            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–æ—Ç–º–µ–Ω–∏—Ç—å –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è",                                                                 callback_data='back_main_admin')))        elif admin.edit_acc_name != "" and admin.edit_acc_first_mes != "" and admin.edit_acc_second_mes == "" \                and admin.flag == 9:            ####bot.delete_message(chat_id=user_id,message_id=message.id)            admin.edit_acc_second_mes = message.text            yes_no_acc = types.InlineKeyboardMarkup(row_width=1).add(                types.InlineKeyboardButton(text="–î–∞", callback_data="yes_acc")).add(                types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="ready_acc"))            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ç—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ?",                                  reply_markup=yes_no_acc)        ###—É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞        elif admin.flag == 10:            if message.text in services_accounts.data:                del services_accounts.data[message.text]                admin.flag = 4                services_accounts.data = dict(sorted(services_accounts.data.items(), key=lambda item: item[0]))                save_object(services_accounts, "services_accounts.pkl")                bot.edit_message_text(chat_id=user_id,                                      message_id=admin.message_id,                                      text="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≥–æ—Ç–æ–≤–æ",                                      reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                          types.InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ",                                                                     callback_data='back_main_admin')))            else:                bot.edit_message_text(chat_id=user_id,                                      message_id=user_id,                                      text='–¢–∞–∫–æ–π —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞—à–µ–ª—Å—è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',                                      reply_markup=account_admin_keyboard)        ###—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω—ã        elif admin.flag == 11:            ####bot.delete_message(chat_id=user_id,message_id=message.id)            if admin.edit_acc_name == "":                if message.text in services_accounts.data:                    admin.edit_acc_name = message.text                    bot.edit_message_text(chat_id=user_id,                                          message_id=admin.message_id,                                          text="–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É",                                          reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                              types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–π",                                                                         callback_data='back_main_admin')))                else:                    bot.edit_message_text(chat_id=user_id,                                          message_id=admin.message_id,                                          text='–¢–∞–∫–æ–π —Å–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞—à–µ–ª—Å—è\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑',                                          reply_markup=account_admin_keyboard)            elif admin.edit_acc_price == 0:                if message.text.isdigit():                    service_account = services_accounts.get_elem(admin.edit_acc_name)                    service_account.price = int(message.text)                    bot.edit_message_text(chat_id=user_id,                                          message_id=admin.message_id,                                          text="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≥–æ—Ç–æ–≤–æ",                                          reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                              types.InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data='ready_acc')                                          ))                    admin.edit_acc_name = ""                    services_accounts.data = dict(sorted(services_accounts.data.items(), key=lambda item: item[0]))                    save_object(services_accounts, "services_accounts.pkl")                else:                    bot.edit_message_text(chat_id=user_id,                                          message_id=admin.message_id,                                          text="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")        else:            ####bot.delete_message(chat_id=user_id,message_id=message.id)            admin.edit_acc_third_mes = message.text            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≥–æ—Ç–æ–≤–æ",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–ì–æ—Ç–æ–≤–æ", callback_data='ready_acc')))    ###–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è    elif admin.flag in [13, 14]:        bot.delete_message(chat_id=user_id, message_id=message.id)        list_username = load_data("username.json")        ls_username = message.text.split(' ')        no_user = list()        for username in ls_username:            if username.isdigit():                try:                    if admin.flag == 13:                        users.get_elem(int(username)).status = False                    else:                        users.get_elem(int(username)).status = True                except:                    no_user.append(username)            else:                if username in list_username:                    try:                        if admin.flag == 13:                            users.get_elem(int(list_username[username])).status = False                        else:                            users.get_elem(int(list_username[username])).status = True                    except:                        no_user.append(username)                else:                    admin.flag = 4                    no_user.append(username)        if len(no_user) == 0:            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã!\n–ï—â—ë —á—Ç–æ-—Ç–æ?',                                  reply_markup=admin_keyboard)        else:            txt = ""            for i in no_user:                txt += "@" + i + "\n"            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=f"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{txt}",                                  reply_markup=admin_keyboard)    ###–æ–±—â–∏–π –±–ª–æ–∫ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞    elif admin.flag == 16:        list_username = load_data("username.json")        bot.delete_message(chat_id=user_id, message_id=message.id)        ###—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π        if len(admin.procent_name) == 0:            admin.procent_name = message.text.split(' ')            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text='–¢–µ–ø–µ—Ä—å —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –Ω–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É '                                       '–ø–æ 1-–º—É –ª–≤–ª, –∞ –∑–∞—Ç–µ–º –ø–æ 2-–º—É –ª–≤–ª ',                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data='indiv_procent')))        ###–Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º        elif len(admin.procent_name) != 0:            no_username = ""            if ' ' in message.text:                lvl_1, lvl_2 = message.text.split(' ')[0], message.text.split(' ')[1]                if lvl_1.isdigit() and lvl_1.isdigit():                    for id in admin.procent_name:                        if id.isdigit():                            try:                                user = users.get_elem(int(id))                                user.referral_status = "individual"                                user.reward_lvl_1 = int(lvl_1)                                user.reward_lvl_2 = int(lvl_2)                            except:                                no_username += "@" + id + "\n"                        else:                            try:                                user = users.get_elem(int(list_username[id]))                                user.referral_status = "individual"                                user.reward_lvl_1 = int(lvl_1)                                user.reward_lvl_2 = int(lvl_2)                            except:                                no_username += "@" + id + "\n"                    else:                        if len(no_username) != 0:                            bot.edit_message_text(chat_id=user_id,                                                  message_id=admin.message_id,                                                  text=f"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–∞—á–∏—Å–ª–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π "                                                       f"–ø—Ä–æ—Ü–µ–Ω—Ç:\n{no_username}",                                                  reply_markup=admin_keyboard)                        else:                            bot.edit_message_text(chat_id=user_id,                                                  message_id=admin.message_id,                                                  text=f"–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã –Ω–∞—á–∏—Å–ª–µ–Ω—ã",                                                  reply_markup=admin_keyboard)                        admin.procent_name = []                        admin.procent_lvl_1 = 0                        admin.procent_lvl_2 = 0                        admin.flag = 0                else:                    bot.edit_message_text(chat_id=user_id,                                          message_id=admin.message_id,                                          text="–ù–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª 2 —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞")            else:                bot.edit_message_text(chat_id=user_id,                                      message_id=admin.message_id,                                      text="–ù–∞–ø–∏—à–∏—Ç–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª 2 —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞")    ###–æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é    elif admin.flag == 19:        data = load_data("username.json")        bot.delete_message(chat_id=user_id, message_id=message.id)        try:            username = ''            for i in data:                if data[i] == message.text:                    username = i            if message.text.isdigit():                user_id = str(message.text)            else:                user_id = data[username]            user = users.get_elem(int(user_id))            registration_date = user.registration_date            if user.payment_method == "QIWI":                requisites = user.payment_account + " (Qiwi üì≤)"            else:                requisites = user.payment_account            countries_docs = user.get_str_countries_and_document_types()            full_name = user.complete_name[0] + user.complete_name[1] + user.complete_name[2]            user_balance = user.balance            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=f"–í–æ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"                                       f"id: {user_id}\n"                                       f"–ª–æ–≥–∏–Ω: @{username}\n"                                       f"–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {registration_date}\n"                                       f"—Ä–µ–∫–≤–∏–∑–∏—Ç—ã –≤—ã–ø–ª–∞—Ç: {requisites}  \n"                                       f"—Å—Ç—Ä–∞–Ω–∞:\n{countries_docs['countries']}\n"                                       f"–¥–æ–∫—É–º–µ–Ω—Ç—ã:\n{countries_docs['document_types']}\n"                                       f"–§–ò–û —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –∞–Ω–∫–µ—Ç–µ:\n{full_name}\n"                                       f"–±–∞–ª–∞–Ω—Å: {user_balance} —Ä—É–±.",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞",                                                                 callback_data='back_main_admin')),                                  parse_mode="Markdown")        except:            txt = ""            for i in data:                txt += i + ' - ' + data[i] + '\n'            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=f"–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑\n{txt}")    ###–±–ª–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è    elif admin.flag == 26:        data = load_data("username.json")        bot.delete_message(chat_id=user_id,                           message_id=message.id)        if len(admin.calc_balance) == 0:            admin.calc_balance = message.text.split(' ')            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text="–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –±–∞–ª–∞–Ω—Å –ø–æ–Ω–∏–∑–∏—Ç—å, "                                       "—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="calc_balance")))        else:            if message.text.isdigit():                no_user = ""                amount = int(message.text)                for id in admin.calc_balance:                    if id.isdigit():                        if id in users:                            user = users.get_elem(int(id))                            user.balance += amount                            user.earnings += amount                        else:                            no_user += id + '\n'                    else:                        if id in data:                            user = users.get_elem(int(data[id]))                            user.balance += amount                            user.earnings += amount                        else:                            no_user += "@" + id + '\n'                else:                    if len(no_user) != 0:                        bot.edit_message_text(chat_id=user_id,                                              message_id=admin.message_id,                                              text=f"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:\n{no_user}",                                              reply_markup=admin_keyboard)                    else:                        bot.edit_message_text(chat_id=user_id,                                              message_id=admin.message_id,                                              text=f"–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω",                                              reply_markup=admin_keyboard)                    admin.calc_balance = []            elif "-" in message.text and message.text[1:].isdigit():                no_user = ""                amount = int(message.text[1:])                for id in admin.calc_balance:                    if id.isdigit():                        if id in users:                            user = users.get_elem(int(id))                            user.balance -= amount                            user.earnings -= amount                        else:                            no_user += id + '\n'                    else:                        if id in data:                            user = users.get_elem(int(data[id]))                            user.balance -= amount                            user.earnings -= amount                        else:                            no_user += "@" + id + '\n'                else:                    if len(no_user) != 0:                        bot.edit_message_text(chat_id=user_id,                                              message_id=admin.message_id,                                              text=f"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å:\n{no_user}",                                              reply_markup=admin_keyboard)                    else:                        bot.edit_message_text(chat_id=user_id,                                              message_id=admin.message_id,                                              text=f"–ë–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–µ–Ω",                                              reply_markup=admin_keyboard)                    admin.calc_balance = []            else:                bot.edit_message_text(chat_id=user_id,                                      message_id=admin.message_id,                                      text="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")    elif admin.flag == 30:        bot.delete_message(chat_id=user_id,                           message_id=message.id)        if admin.post_mail_text == "":            admin.post_mail_text = message.text            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=f'–í—ã –≤–≤–µ–ª–∏:\n{message.text}',                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="continue_post_mail"),                                      types.InlineKeyboardButton(text="–∏–∑–º–µ–Ω–∏—Ç—å", callback_data="change_post_mail")))        elif admin.post_mail_text != "" and admin.post_mail_text_button == "":            admin.post_mail_text_button = message.text            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=f'–í—ã –≤–≤–µ–ª–∏:\n{message.text}',                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å",                                                                 callback_data="continue_but_post_mail"),                                      types.InlineKeyboardButton(text="–∏–∑–º–µ–Ω–∏—Ç—å", callback_data="yes_post")))        elif admin.post_mail_text != "" and admin.post_mail_text_button != "":            admin.post_mail_url = message.text            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=f'–í—ã –≤–≤–µ–ª–∏:\n{message.text}',                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="no_post"),                                      types.InlineKeyboardButton(text="–∏–∑–º–µ–Ω–∏—Ç—å",                                                                 callback_data="continue_but_post_mail")))            """if admin.post_mail_action in [5,6,7]:                bot.edit_message_text(chat_id=user_id,                                    message_id=admin.message_id,                                    text=f'–ü–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n{admin.post_mail_text}\n'                                        f'–£–≤–µ–¥–æ–º–∏—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤?',                                    reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                                 types.InlineKeyboardButton(text="–î–∞", callback_data="yes_disable_notification"),                                                 types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="ready_post")))            else:                bot.edit_message_text(chat_id=user_id,                                    message_id=admin.message_id,                                    text=f'–ü–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n{admin.post_mail_text}',                                    reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                                 types.InlineKeyboardButton(text=admin.post_mail_text_button, url=admin.post_mail_url),                                                 types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–∏—Ç—å", callback_data="ready_post"),                                                 types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å", callback_data="no_ready_post")))            admin.flag = 4"""    elif admin.flag == 35:        bot.delete_message(chat_id=admin,                           message_id=message.id)        admin.channel_sale_text = message.text        bot.edit_message_text(chat_id=admin,                              message_id=admin.message_id,                              text=f"–í—ã –≤–≤–µ–ª–∏:\n{message.text}",                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                             callback_data="confirm_chanel_sale"),                                  types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å",                                                             callback_data="chanel_sale")                              ))        admin.flag = 4    elif admin.flag == 37:        bot.delete_message(chat_id=admin,                           message_id=message.id)        admin.channel_sale_count += 1        admin.channel_sale_button.append([message.text])        bot.edit_message_text(chat_id=admin,                              message_id=admin.message_id,                              text=f'–í—ã –≤–≤–µ–ª–∏:\n{message.text}\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?',                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                             callback_data="add_url_chanel_sale"),                                  types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å",                                                             callback_data="change_but_sale")                              ))        admin.flag = 4    elif admin.flag == 36:        bot.delete_message(chat_id=user_id,                           message_id=message.id)        try:            admin.channel_sale_button[admin.channel_sale_count].append(message.text)            keyboard = types.InlineKeyboardMarkup(row_width=1)            for i in admin.channel_sale_button:                keyboard.add(types.InlineKeyboardButton(text=i[0], url=i[1]))            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=f"–í—ã –≤–≤–µ–ª–∏: {message.text}",                                  reply_markup=keyboard.add(                                      types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                                 callback_data="confirm_chanel_sale"),                                      types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å", callback_data="change_url_sale"), ))            admin.flag = 4        except:            del admin.channel_sale_button[admin.channel_sale_count][1]            bot.edit_message_text(chat_id=user_id,                                  message_id=admin.message_id,                                  text=f"–ö–Ω–æ–ø–∫—É —Å —Ç–∞–∫–∏–º url  –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â—ë —Ä–∞–∑")    ###–∏–∑–º–µ–Ω–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è    elif admin.flag == 7:        admin.edit_main_mes = str(message.text)        bot.send_message(chat_id=message.from_user.id,                         reply_to_message_id=message.message_id,                         text="–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ?",                         reply_markup=editing_main_mes_keyboard)    ###–∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è    elif admin.flag == 8:        if str(message.text).isdigit():            admin.edit_period = int(message.text)            bot.send_message(chat_id=message.from_user.id,                             reply_to_message_id=message.message_id,                             text="–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è?",                             reply_markup=editing_period_of_main_mes_keyboard)        else:            bot.send_message(chat_id=user_id,                             text="–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –≤ —á–∞—Å–∞—Ö")    ###–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"    elif admin.flag == 12:        admin.new_actual_verify_mes = {"text": str(message.text), "keyboard": None}        bot.send_message(chat_id=message.from_user.id,                         reply_to_message_id=message.message_id,                         text="–í—ã–±–µ—Ä–µ—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞. "                              "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ",                         reply_markup=new_message_for_actual_verify)    ###–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ "–í–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞"    elif admin.flag == 17:        admin.new_important_rules_mes = {"text": str(message.text), "keyboard": None}        bot.send_message(chat_id=message.from_user.id,                         reply_to_message_id=message.message_id,                         text="–í—ã–±–µ—Ä–µ—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞. "                              "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ",                         reply_markup=editing_mes_in_important_rules)    ###–ø—Ä–∏–µ–º —Å—Å—ã–ª–∫–∏    elif admin.flag == 15:        if "https://" in message.text or "http://" in message.text:            a = str(message.text).split("\n")            if len(a) == 2:                if a[1] != "https://" and a[1] != "http://":                    admin.new_actual_verify_mes["keyboard"] = [a[0], a[1]]                    bot.send_message(chat_id=message.from_user.id,                                     reply_to_message_id=message.message_id,                                     text="–ö—Ä–∞—Å–∞–≤–∞",                                     reply_markup=new_message_for_actual_verify)                else:                    bot.send_message(chat_id=message.from_user.id,                                     reply_to_message_id=message.message_id,                                     text="–û—à–∏–±–∫–∞. –ü—Ä–∏–º–µ—Ä:\n–¢–ï–ö–°–¢ –ö–ù–û–ü–ö–ò\nhttp(s)://...",                                     reply_markup=new_message_for_actual_verify)            else:                bot.send_message(chat_id=message.from_user.id,                                 reply_to_message_id=message.message_id,                                 text="–û—à–∏–±–∫–∞. –ü—Ä–∏–º–µ—Ä:\n–¢–ï–ö–°–¢ –ö–ù–û–ü–ö–ò\nhttp(s)://...",                                 reply_markup=new_message_for_actual_verify)        else:            bot.send_message(chat_id=message.from_user.id,                             reply_to_message_id=message.message_id,                             text="–û—à–∏–±–∫–∞. –ü—Ä–∏–º–µ—Ä:\n–¢–ï–ö–°–¢ –ö–ù–û–ü–ö–ò\nhttp(s)://...",                             reply_markup=new_message_for_actual_verify)    ###–ø—Ä–∏–µ–º —Å—Å—ã–ª–∫–∏    elif admin.flag == 18:        if "https://" in message.text or "http://" in message.text:            a = str(message.text).split("\n")            if len(a) == 2:                if a[1] != "https://" and a[1] != "http://":                    admin.new_important_rules_mes["keyboard"] = [a[0], a[1]]                    bot.send_message(chat_id=message.from_user.id,                                     reply_to_message_id=message.message_id,                                     text="–ö—Ä–∞—Å–∞–≤–∞",                                     reply_markup=editing_mes_in_important_rules)                else:                    bot.send_message(chat_id=message.from_user.id,                                     reply_to_message_id=message.message_id,                                     text="–û—à–∏–±–∫–∞. –ü—Ä–∏–º–µ—Ä:\n–¢–ï–ö–°–¢ –ö–ù–û–ü–ö–ò\nhttp(s)://...",                                     reply_markup=editing_mes_in_important_rules)            else:                bot.send_message(chat_id=message.from_user.id,                                 reply_to_message_id=message.message_id,                                 text="–û—à–∏–±–∫–∞. –ü—Ä–∏–º–µ—Ä:\n–¢–ï–ö–°–¢ –ö–ù–û–ü–ö–ò\nhttp(s)://...",                                 reply_markup=editing_mes_in_important_rules)        else:            bot.send_message(chat_id=message.from_user.id,                             reply_to_message_id=message.message_id,                             text="–û—à–∏–±–∫–∞. –ü—Ä–∏–º–µ—Ä:\n–¢–ï–ö–°–¢ –ö–ù–û–ü–ö–ò\nhttp(s)://...",                             reply_markup=editing_mes_in_important_rules)    elif admin.flag == 31:        admin.flag = 32        admin.payment_method_settings_name = message.text        bot.send_message(chat_id=message.from_user.id,                         text=f"–í—ã –≤–≤–µ–ª–∏:\n{message.text}\n\n–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã",                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="new_payment")))    elif admin.flag == 32:        admin.flag = 4        admin.payment_method_settings_instruction = message.text        bot.send_message(chat_id=message.from_user.id,                         text=f'–î–ª—è {admin.payment_method_settings_name} –≤–≤–µ–¥–µ–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n{message.text}',                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–°–û–•–†–ê–ù–ò–¢–¨", callback_data="save_new_payment_but")).add(                             types.InlineKeyboardButton(text="–û–¢–ú–ï–ù–ê", callback_data="payments")).add(                             types.InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="back_to_input_instruction")))    elif admin.flag == 33:        ##save_new_data_for_pay_method edit_payment_method_instruction edit_payment_method_name        admin.payment_method_settings_new_name = message.text        bot.send_message(chat_id=message.from_user.id,                         text=f'–î–ª—è {admin.payment_method_settings_name} –≤–≤–µ–¥–µ–Ω–æ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {message.text}',                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–°–û–•–†–ê–ù–ò–¢–¨",                                                        callback_data="save_new_data_for_pay_method")).add(                             types.InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="edit_payment_method_name")))    elif admin.flag == 34:        admin.flag = 4        ##save_new_data_for_pay_method edit_payment_method_instruction edit_payment_method_name        admin.payment_method_settings_new_instruction = message.text        bot.send_message(chat_id=message.from_user.id,                         text=f'–î–ª—è {admin.payment_method_settings_name} –≤–≤–µ–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n{message.text}',                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–°–û–•–†–ê–ù–ò–¢–¨",                                                        callback_data="save_new_data_for_pay_method")).add(                             types.InlineKeyboardButton(text="–ù–ê–ó–ê–î", callback_data="edit_payment_method_instruction")))    ###–≤–≤–æ–¥ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏    elif admin.flag == 39:        admin.flag = 4        task1.set_instruction(message.text)        bot.send_message(chat_id=message.from_user.id, text=f"–í—ã –≤–≤–µ–ª–∏:\n{message.text}",                         reply_markup=inst_task_keyboard)    ###–≤–≤–æ–¥ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏    elif admin.flag in [40, 41, 44]:        if message.text.isdigit():            if admin.flag == 40:                task1.set_time(int(message.text))                bot.send_message(chat_id=message.from_user.id, text=f"–í—ã –≤–≤–µ–ª–∏: {message.text}",                                 reply_markup=act_filter_time)            elif admin.flag == 41:                task1.set_seats(int(message.text))                bot.send_message(chat_id=message.from_user.id, text=f"–í—ã –≤–≤–µ–ª–∏: {message.text}",                                 reply_markup=act_filter_seats)            else:                task1.set_cost(int(message.text))                bot.send_message(chat_id=message.from_user.id, text=f"–í—ã –≤–≤–µ–ª–∏: {message.text}",                                 reply_markup=cost_task_keyboard)                admin.flag = 4        else:            bot.send_message(chat_id=message.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")###—É—Å–ª–æ–≤–∏–µ –¥—Ä—É–≥–æ–µ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–ª–∞–≥@bot.callback_query_handler(func=lambda call: call.from_user.id in admins)def callback_admin(call):    global task1, pay_keyboard_for_admin, pay_keyboard, all_tasks    user_id = call.from_iser.id    admin = admins.get_elem(user_id)    if call.data == "user":        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í—ã–±–µ—Ä–∏—Ç–µ:",                                  reply_markup=user_keyboard)        admin.message_id = r.id    elif call.data == "statistics":        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í—ã–±–µ—Ä–∏—Ç–µ:",                              reply_markup=statistics_keyboard)    ###—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è 1 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è    elif call.data == "one_user":        list_username = load_data("username.json")        txt = ""        for i in list_username:            txt += f"{i} - {list_username[i]}\n"        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ id –∏–ª–∏ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, "                                       f"—á—å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å\n"                                       f"–í–æ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫(username - user_id)\n{txt}",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                                 callback_data="statistics")),                                  parse_mode="Markdown")        admin.message_id = r.id        admin.flag = 19    ###–æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞    elif call.data == "full_statistics":        data = users.full_statistic()        txt = f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {data['count_user']}\n" \              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {data['count_no_verified']}\n" \              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {data['count_verified_paid']}\n" \              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {data['count_verified_rejected']}\n" \              f"–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è: {data['all_balance']}\n" \              f"–í–µ—Å—å –±–∞–ª–∞–Ω—Å, –∫–æ—Ç–æ—Ä—ã–π —Å–µ–π—á–∞—Å –Ω–µ –≤—ã–≤–µ–¥–µ–Ω: {data['balance']}\n" \              f"–ë–∞–ª–∞–Ω—Å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–µ–ª–∏: {data['paid']}\n" \              f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤: {data['count_requisites']}"        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text=txt,                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                             callback_data="statistics")))    ###–≤—ã–±–æ—Ä —Ç–æ–≥–æ, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑  –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏(–∏–ª–∏ –∂–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É)    elif call.data == 'edit_button_instr':        bot.delete_message(chat_id=user_id,                           message_id=call.message.id)        admin.flag = 4        bot.send_message(chat_id=user_id,                         text='–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã –∏–º–µ–Ω–Ω–æ —Ö–æ—Ç–∏—Ç–µ:',                         reply_markup=instr_keyboard)    ###–∏–∑–º–µ–Ω–µ–Ω–∏–µ/–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ url –∫–Ω–æ–ø–∫–∏ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏    elif call.data == 'edit_url' or call.data == 'append_url':        bot.delete_message(chat_id=user_id,                           message_id=call.message.id)        admin.telegraph_name = ""        admin.telegraph_url = ""        admin.flag = 5        if call.data == "edit_url":            admin.telegraph_action = 0        else:            admin.telegraph_action = 1        with open("file.pkl", "rb") as fp:            a = pickle.load(fp)        instruction_keyboard = pickle.loads(a["instruction_keyboard"])        txt = ''        for i in instruction_keyboard.keyboard:            txt += i[0].text + '\n'        txt = ''        for i in instruction_keyboard.keyboard:            txt += i[0].text + '\n'        if call.data == 'edit_url':            r = bot.send_message(chat_id=user_id,                                 text=f'–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å, '                                      f'–∞ –ø–æ—Å–ª–µ url –∫–Ω–æ–ø–∫–∏\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏:\n{txt}',                                 reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                     types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥',                                                                callback_data="edit_button_instr")                                 ))        else:            r = bot.send_message(chat_id=user_id,                                 text=f'–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å, '                                      f'–∞ –ø–æ—Å–ª–µ url –∫–Ω–æ–ø–∫–∏\n–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏:\n{txt}',                                 reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                     types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥',                                                                callback_data="edit_button_instr")                                 ))        admin.message_id = r.id    ###—É–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏    elif call.data == 'remove_url':        admin.name = ""        admin.url = ""        admin.action = 2        bot.delete_message(chat_id=user_id,                           message_id=call.message.id)        admin.flag = 6        with open("file.pkl", "rb") as fp:            a = pickle.load(fp)        instruction_keyboard = pickle.loads(a["instruction_keyboard"])        txt = ''        for i in instruction_keyboard.keyboard:            txt += i[0].text + '\n'        txt = ''        for i in instruction_keyboard.keyboard:            txt += i[0].text + '\n'        r = bot.send_message(chat_id=user_id,                             text=f'–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å\n'                                  f'–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏:\n{txt}',                             reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                 types.InlineKeyboardButton(text='–Ω–∞–∑–∞–¥',                                                            callback_data="edit_button_instr")                             ))        admin.message_id = r.id    elif call.data == "yes_action":        bot.delete_message(chat_id=user_id,                           message_id=call.message.id)        edit_button_instr(admin=user_id,                          name=admin.telegraph_name,                          url=admin.telegraph_url,                          action=admin.telegraph_action,                          message_id=None)        admin.telegraph_name = ""        admin.telegraph_url = ""        admin.telegraph_action = 0        admin.flag = 4    elif call.data == "no_action":        admin.telegraph_name = ""        admin.telegraph_url = ""        admin.telegraph_action = 0        admin.flag = 4        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text=f"{start_text}",                              reply_markup=start_admin_keyboard,                              parse_mode='Markdown')    ###–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–µ–Ω    elif call.data == "edit_account":        bot.delete_message(chat_id=user_id,                           message_id=call.message.id)        bot.send_message(chat_id=user_id,                         text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",                         reply_markup=account_admin_keyboard)    ###–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞    elif call.data == "append_acc":        mes = ""        for i in services_accounts.data:            mes += i + "\n"        admin.flag = 9        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f"–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞(—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã)\n"                                       f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n{mes}",                                  reply_markup=back_to_edit_account_keyboard)        admin.message_id = r.id    ###—É–¥–∞–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞    elif call.data == "remove_acc":        mes = ""        for i in services_accounts.data:            mes += i + "\n"        admin.flag = 10        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞(—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã)"                                       f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n{mes}",                                  reply_markup=back_to_edit_account_keyboard)        admin.message_id = r.id    ###–∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –∞–∫–∫–∞—É–Ω—Ç—É    elif call.data == "change_cost":        mes = ""        for i in services_accounts.data:            mes += i + "\n"        admin.flag = 11        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f"–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞(—Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã)"                                       f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n{mes}",                                  reply_markup=back_to_edit_account_keyboard)        admin.message_id = r.id    ###–ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞    elif call.data == 'yes_acc':        bot.edit_message_text(chat_id=user_id,                              message_id=admin.message_id,                              text="–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ç—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")    elif call.data == "back_edit_account":        admin.flag = 4        bot.send_message(chat_id=user_id,                         text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:",                         reply_markup=account_admin_keyboard)    ###–∫–æ–Ω–µ—Ü –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞    elif call.data == 'ready_acc':        if admin.flag == 9:            service_account = Service_Account()            service_account.first_mes = admin.edit_acc_first_mes            service_account.second_mes = admin.edit_acc_second_mes            service_account.third_mes = admin.edit_acc_third_mes            service_account.price = 0            services_accounts.data[admin.edit_acc_name] = service_account            admin.edit_acc_name = ""            admin.edit_acc_first_mes = ""            admin.edit_acc_second_mes = ""            admin.edit_acc_third_mes = ""            admin.price = 0            services_accounts.data = dict(sorted(services_accounts.data.items(), key=lambda item: item[0]))            save_object(services_accounts, "services_accounts.pkl")        acc_keyboard = services_accounts.keyboard_init(user_id)        bot.edit_message_text(chat_id=user_id,                              message_id=admin.message_id,                              text="–ê–∫–∫–∞—É–Ω—Ç—ã –≤—ã–≥–ª—è–¥—è—Ç —Ç–µ–ø–µ—Ä—å —Ç–∞–∫",                              reply_markup=acc_keyboard)        admin.flag = 4    ###–≤—ã–±–æ—Ä –º–µ–∂–¥—É –±–ª–æ–∫/—Ä–∞–∑–±–ª–æ–∫    elif call.data == "edit_status_user":        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í—ã–±–µ—Ä–∏—Ç–µ:",                                  reply_markup=block_unblock)        admin.message_id = r.id    ###–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è    elif call.data == "block":        admin.flag = 13        list_username = load_data("username.json")        txt = ""        for i in list_username:            txt += i + ' - ' + list_username[i] + '\n'        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å."                                       f"–í–æ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫(username - user_id)\n{txt}",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                                 callback_data="edit_status_user")))        admin.message_id = r.id    ###—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è    elif call.data == "unblock":        admin.flag = 14        list_username = load_data("username.json")        txt = ""        for i in list_username:            txt += i + ' - ' + list_username[i] + '\n'        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å."                                       f"–í–æ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫(username - user_id)\n{txt}",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                                 callback_data="edit_status_user")))        admin.message_id = r.id    ###–Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –∏–Ω–¥ –ø—Ä–æ—Ü–µ–Ω—Ç–∞    elif call.data == "indiv_procent":        admin.flag = 16        list_username = load_data("username.json")        admin.procent_name = []        txt = ""        for i in list_username:            txt += '`' + i + '`' + ' - ' + '`' + list_username[i] + '`' + '\n'        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º—É –∏–º–µ–Ω–Ω–æ(id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å "                                       f"–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç\n{txt}",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                                 callback_data='user')                                  ),                                  parse_mode="Markdown")        admin.message_id = r.id    ###–Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å    elif call.data == "calc_balance":        admin.flag = 26        admin.calc_balance = []        list_username = load_data("username.json")        txt = ""        for i in list_username:            txt += '`' + i + '`' + ' - ' + '`' + list_username[i] + '`' + '\n'        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f"–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º—É –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å \n{txt}",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                                 callback_data='user')),                                  parse_mode="Markdown")        admin.message_id = r.id    ###–ø–µ—Ä–µ—Ö–æ–¥ –≤ –ø–æ—Å—Ç–∏–Ω–≥&—Ä–∞—Å—Å—ã–ª–∫–∞    elif call.data == "posting_mailing":        admin.post_mail_text = ""        admin.post_mail_text_button = ""        admin.post_mail_url = ""        admin.post_mail_action = 0        admin.post_mail_disable_notification = True        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í—ã–±–µ—Ä–∏—Ç–µ:",                                  reply_markup=posting_mailing)        admin.message_id = r.id    ###–≤—ã–±–æ—Ä –ø–æ—Å—Ç–∏–Ω–≥–∞    elif call.data == "posting":        admin.post_mail_text = ""        admin.post_mail_text_button = ""        admin.post_mail_url = ""        admin.post_mail_action = 0        admin.post_mail_disable_notification = True        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í—ã–±–µ—Ä–∏—Ç–µ:",                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–í —á–∞—Ç", callback_data="post_chat"),                                  types.InlineKeyboardButton(text="–í –∫–∞–Ω–∞–ª", callback_data="post_chanel"),                                  types.InlineKeyboardButton(text="–í –æ–±–∞",                                                             callback_data="post_chat_chanel"),                                  types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting_mailing")                              ))    ###–ø–æ—Å—Ç–∏–Ω–∫ —Å –∑–∞–∫—Ä–µ–ø–æ–º    elif call.data == "posting_pin":        admin.post_mail_text = ""        admin.post_mail_text_button = ""        admin.post_mail_url = ""        admin.post_mail_action = 0        admin.post_mail_disable_notification = True        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í—ã–±–µ—Ä–∏—Ç–µ:",                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–í —á–∞—Ç", callback_data="post_chat_pin"),                                  types.InlineKeyboardButton(text="–í –∫–∞–Ω–∞–ª",                                                             callback_data="post_chanel_pin"),                                  types.InlineKeyboardButton(text="–í –æ–±–∞",                                                             callback_data="post_chat_chanel_pin"),                                  types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting_mailing")                              ))    ##—Ä–∞—Å—Å—ã–ª–∫–∞    elif call.data == "mailing":        admin.post_mail_text = ""        admin.post_mail_text_button = ""        admin.post_mail_url = ""        admin.post_mail_action = 0        admin.post_mail_disable_notification = True        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting_mailing")                              ))        admin.flag = 30        admin.posting_mailing_action = 4    ###–≤—ã–±–æ—Ä –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å    elif call.data == "post_chat" or call.data == "post_chanel" or call.data == "post_chat_chanel" \            or call.data == "post_chat_pin" or call.data == "post_chanel_pin" or call.data == "post_chat_chanel_pin":        admin.flag = 30        if call.data == "post_chat":            admin.post_mail_action = 1            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting")                                  ))        elif call.data == "post_chanel":            admin.post_mail_action = 2            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting")                                  ))        elif call.data == "post_chat_chanel":            admin.post_mail_action = 3            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting")                                  ))        elif call.data == "post_chat_pin":            admin.post_mail_action = 5            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting_pin")                                  ))        elif call.data == "post_chanel_pin":            admin.post_mail_action = 6            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting_pin")                                  ))        elif call.data == "post_chat_chanel_pin":            admin.posting_mailing_action = 7            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting_pin")                                  ))    elif call.data == "change_post_mail":        admin.post_mail_text = ""        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç",                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting_pin")                              ))    elif call.data == "continue_post_mail":        bot.edit_message_text(chat_id=user_id,                              message_id=admin.message_id,                              text="–ù—É–∂–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞?",                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–î–∞", callback_data="yes_post"),                                  types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="no_post")                              ))    ###–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –ø–æ—Å—Ç    elif call.data == "yes_post":        admin.post_mail_text_button = ""        if admin.post_mail_action == 1 or \                admin.post_mail_action == 2 or \                admin.post_mail_action == 3:            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting")                                  ))        elif admin.post_mail_action == 4:            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="mailing")                                  ))        else:            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="posting_pin")                                  ))    elif call.data == "continue_but_post_mail":        admin.post_mail_url = ""        bot.edit_message_text(chat_id=user_id,                              message_id=admin.message_id,                              text="–í–≤–µ–¥–∏—Ç–µ url")    ###–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ—Å—Ç–∞    elif call.data == "no_post":        if admin.post_mail_action == 5 or \                admin.post_mail_action == 6 or \                admin.post_mail_action == 7:            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f'–£–≤–µ–¥–æ–º–∏—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤?',                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–î–∞",                                                                 callback_data="yes_disable_notification"),                                      types.InlineKeyboardButton(text="–ù–µ—Ç", callback_data="ready_post")                                  ))        else:            if len(admin.post_mail_text_button) == 0:                bot.edit_message_text(chat_id=user_id,                                      message_id=call.message.id,                                      text=f'–ü–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n{admin.post_mail_text}',                                      reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                          types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                                     callback_data="ready_post"),                                          types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å",                                                                     callback_data="posting_mailing")                                      ))            else:                bot.edit_message_text(chat_id=user_id,                                      message_id=call.message.id,                                      text=f'–ü–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n{admin.post_mail_text}',                                      reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                          types.InlineKeyboardButton(                                              text=admin.post_mail_text_button,                                              url=admin.post_mail_url),                                          types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                                     callback_data="ready_post"),                                          types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å",                                                                     callback_data="posting_mailing")                                      ))    ###–≤–∫–ª—é—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è    elif call.data == "yes_disable_notification":        admin.post_mail_disable_notification = False        if len(admin.post_mail_text_button) == 0:            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f'–ü–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n{admin.post_mail_text}',                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                                 callback_data="ready_post"),                                      types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å",                                                                 callback_data="posting_mailing")                                  ))        else:            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f'–ü–æ—Å—Ç –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:\n{admin.post_mail_text}',                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(                                          text=admin.post_mail_text_button,                                          callback_data=admin.post_mail_url),                                      types.InlineKeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",                                                                 callback_data="ready_post"),                                      types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å",                                                                 callback_data="posting_mailing")                                  ))    ###–æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç–∞    elif call.data == "ready_post":        ###–í —á–∞—Ç        if admin.post_mail_action == 1 or admin.post_mail_action == 5:            if len(admin.post_mail_text_button) == 0:                r = bot.send_message(chat_id=-1001747603263,                                     text=admin.post_mail_text)            else:                r = bot.send_message(chat_id=-1001747603263,                                     text=admin.post_mail_text,                                     reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                         types.InlineKeyboardButton(                                             text=admin.post_mail_text_button,                                             url=admin.post_mail_url)))            if admin.post_mail_action == 6:                bot.pin_chat_message(chat_id=-1001747603263,                                     message_id=r.id,                                     disable_notification=admin.post_mail_disable_notification)        elif admin.post_mail_action == 2 or \                admin.post_mail_action == 6:            if len(admin.post_mail_text_button) == 0:                r = bot.send_message(chat_id=-1001695261290,                                     text=admin.post_mail_text)            else:                r = bot.send_message(chat_id=-1001695261290,                                     text=admin.post_mail_text,                                     reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                         types.InlineKeyboardButton(                                             text=admin.post_mail_text_button,                                             url=admin.post_mail_url)))            if admin.post_mail_action == 6:                bot.pin_chat_message(chat_id=-1001695261290,                                     message_id=r.id,                                     disable_notification=admin.post_mail_disable_notification)        elif admin.post_mail_action == 3 or \                admin.post_mail_action == 7:            if admin.post_mail_action == 0:                r = bot.send_message(chat_id=-1001695261290,                                     text=admin.post_mail_text)                m = bot.send_message(chat_id=-1001747603263,                                     text=admin.post_mail_text)            else:                r = bot.send_message(chat_id=-1001695261290,                                     text=admin.post_mail_text,                                     reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                         types.InlineKeyboardButton(                                             text=admin.post_mail_text_button,                                             url=admin.post_mail_url)))                m = bot.send_message(chat_id=-1001747603263,                                     text=admin.post_mail_text,                                     reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                         types.InlineKeyboardButton(                                             text=admin.post_mail_text_button,                                             url=admin.post_mail_url)))            if admin.post_mail_action == 7:                bot.pin_chat_message(chat_id=-1001695261290,                                     message_id=r.id,                                     disable_notification=admin.post_mail_disable_notification)                bot.pin_chat_message(chat_id=-1001747603263,                                     message_id=m.id,                                     disable_notification=admin.post_mail_disable_notification)        elif admin.post_mail_action == 4:            if len(admin.post_mail_text_button) == 0:                for i in users.data:                    if i not in admins:                        bot.send_message(chat_id=i,                                         text=admin.post_mail_text)            else:                for i in users.data:                    if i not in admins:                        bot.send_message(chat_id=i,                                         text=admin.post_mail_text,                                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                             types.InlineKeyboardButton(                                                 text=admin.post_mail_text_button,                                                 url=admin.post_mail_url)))        admin.post_mail_text_button = ""        admin.post_mail_action = 0        admin.post_mail_disable_notification = True        admin.post_mail_url = ""        admin.post_mail_text = ""        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text=f"{start_text}",                              reply_markup=admin_keyboard,                              parse_mode='Markdown')        admin.flag = 4    elif call.data == "chanel_sale":        admin.channel_sale_text = ""        admin.channel_sale_button = []        admin.channel_sale_count = -1        r = bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text="–í–≤–µ–¥–∏—Ç–µ –ø–æ—Å—Ç",                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–Ω–∞–∑–∞–¥",                                                                 callback_data="back_main_admin")                                  ))        admin.message_id = r.id        admin.flag = 35    elif call.data == "confirm_chanel_sale":        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–ù—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É?",                              reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                  types.InlineKeyboardButton(text="–¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É",                                                             callback_data="add_chanel_sale"),                                  types.InlineKeyboardButton(text="–Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–Ω–æ–ø–∫—É",                                                             callback_data="ready_post_sale")                              ))    elif call.data == "add_chanel_sale":        admin.flag = 37        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏")    elif call.data == "change_but_sale":        admin.flag = 37        del admin.channel_sale_button[admin.channel_sale_count]        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏")        admin.channel_sale_count -= 1    elif call.data == "add_url_chanel_sale":        admin.flag = 36        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í–≤–µ–¥–∏—Ç–µ url")    elif call.data == "change_url_sale":        del admin.channel_sale_button[admin.channel_sale_count][1]        admin.flag = 36        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í–≤–µ–¥–∏—Ç–µ url")    elif call.data == "ready_post_sale":        if len(admin.channel_sale_button) == 0:            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f'{admin.channel_sale_text}\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å?',                                  reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                      types.InlineKeyboardButton(text="–æ—Ç–ø—Ä–∞–≤–∏—Ç—å",                                                                 callback_data="send_chanel_sale"),                                      types.InlineKeyboardButton(text="–∏–∑–º–µ–Ω–∏—Ç—å",                                                                 callback_data="chanel_sale")                                  ))        else:            keyboard = types.InlineKeyboardMarkup(row_width=1)            for i in admin.channel_sale_button:                keyboard.add(types.InlineKeyboardButton(text=i[0], url=i[1]))            bot.edit_message_text(chat_id=user_id,                                  message_id=call.message.id,                                  text=f'{admin.channel_sale_text}\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å?',                                  reply_markup=keyboard.add(                                      types.InlineKeyboardButton(text="–æ—Ç–ø—Ä–∞–≤–∏—Ç—å",                                                                 callback_data="send_chanel_sale"),                                      types.InlineKeyboardButton(text="–æ—Ç–º–µ–Ω–∏—Ç—å",                                                                 callback_data="back_main_admin")                                  ))    elif call.data == "send_chanel_sale":        if len(admin.channel_sale_button) == 0:            bot.send_message(chat_id=-1001747603263,                             text=admin.channel_sale_text)        else:            keyboard = types.InlineKeyboardMarkup(row_width=1)            for i in admin.channel_sale_button:                keyboard.add(types.InlineKeyboardButton(text=i[0], url=i[1]))            bot.send_message(chat_id=-1001747603263,                             text=admin.channel_sale_text,                             reply_markup=keyboard)        admin.channel_sale_text = ""        admin.channel_sale_button = []        admin.channel_sale_count = -1        admin.flag = 4    elif call.data == "infinity_post":        bot.send_message(chat_id=user_id,                         text=f"üî≥ –í–µ—á–Ω—ã–π –ø–æ—Å—Ç - —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—É—Ç–µ–º —É–¥–∞–ª–µ–Ω–∏—è "                              f"–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ—Å—Ç–∏–Ω–≥–∞ –≤ –∫–∞–Ω–∞–ª–µ, –ø–æ–∑–≤–æ–ª—è—è —Ç–µ–º —Å–∞–º—ã–º –±—ã—Ç—å –≤—Å–µ–≥–¥–∞ –Ω–∞–≤–µ—Ä—Ö—É "                              f"—Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–æ–≤ –∏ –∫–∞–Ω–∞–ª–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"                              f"üîò–ö–Ω–æ–ø–∫–∞ '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ' - "                              f"–∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–µ—á–Ω–æ–≥–æ –ø–æ—Å—Ç–∏–Ω–≥–∞\n"                              f"üîò –ö–Ω–æ–ø–∫–∞ '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å' - "                              f"–∑–∞–¥–∞—Ç—å –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å, –≤ –∫–æ—Ç–æ—Ä—É—é —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å—Å—è "                              f"–∏ –∑–∞–Ω–æ–≤–æ –≤—Å–ø–ª—ã–≤–∞—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",                         reply_markup=actions_with_infinity_post)    elif call.data == "edit_main_mes":        admin.flag = 7        bot.send_message(chat_id=user_id,                         text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –≥–ª–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",                         reply_markup=actual_verify)    elif call.data == "edit_period_of_main_mes":        admin.flag = 8        bot.send_message(chat_id=user_id,                         text="–í–≤–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è",                         reply_markup=back_to_infinity_post_keyboard)    elif call.data == "add_button":        admin.flag = 15        bot.send_message(chat_id=user_id,                         text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ —Å—Å—ã–ª–∫—É –∫–Ω–æ–ø–∫–∏. –ü—Ä–∏–º–µ—Ä:\n–ê–∫—Ç—É–ª—å–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏\nhttps://...",                         reply_markup=actual_verify_composing_new_mes)    elif call.data == "back_to_composing_mes_actual_verify":        bot.send_message(chat_id=user_id,                         text="–í—ã–±–µ—Ä–µ—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ",                         reply_markup=new_message_for_actual_verify)    elif call.data == "accept_new_actual_verify_mes":        admin.flag = 4        if admin.new_actual_verify_mes["text"] == "" and admin.new_actual_verify_mes["keyboard"] == []:            bot.send_message(chat_id=actual_verify_channel,                             text=admin.new_actual_verify_mes["text"])            bot.send_message(chat_id=user_id,                             text="–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ",                             reply_markup=admin_keyboard)            sending_and_deleting_main_message()        else:            try:                bot.send_message(chat_id=actual_verify_channel,                                 text=admin.new_actual_verify_mes["text"],                                 reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                     types.InlineKeyboardButton(                                         text=admin.new_actual_verify_mes["keyboard"][0],                                         url=admin.new_actual_verify_mes["keyboard"][                                             1])))  # admin.new_actual_verify_mes_keyboard)                bot.send_message(chat_id=user_id,                                 text="–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ",                                 reply_markup=admin_keyboard)                sending_and_deleting_main_message()            except:                bot.send_message(chat_id=user_id,                                 text="–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Å—Å—ã–ª–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ",                                 reply_markup=admin_keyboard)    elif call.data == "deny_new_actual_verify_mes":        admin.flag = 4        bot.send_message(chat_id=user_id,                         text="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ",                         reply_markup=admin_keyboard)    elif call.data == "accept_to_edit_main_mes":        admin.flag = 4        set_main_message["text"] = admin.edit_main_mes        save_data(set_main_message, "main_mes.json")        sending_and_deleting_main_message()        bot.send_message(chat_id=user_id,                         text="–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ",                         reply_markup=admin_keyboard)    elif call.data == "back_to_actual_verify":        bot.send_message(chat_id=user_id,                         text="–í–æ—Ç —á—Ç–æ –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è—Ö",                         reply_markup=actions_with_infinity_post)    elif call.data == "deny_editing_main_mes":        admin.flag = 4        bot.send_message(chat_id=user_id,                         text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",                         reply_markup=admin_keyboard)    elif call.data == "accept_to_edit_period_of_main_mes":        admin.flag = 4        set_main_message["period"] = admin.edit_period        message_1.stop_process()        message_1.start_process()        save_data(set_main_message, "main_mes.json")        bot.send_message(chat_id=user_id,                         text="–ü–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∞",                         reply_markup=admin_keyboard)    elif call.data == "actual":        bot.send_message(chat_id=user_id,                         text="–í–æ—Ç —á—Ç–æ –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è—Ö",                         reply_markup=actions_in_actual_verify)    elif call.data == "new_message_in_actual":        admin.flag = 12        bot.send_message(chat_id=user_id,                         text="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",                         reply_markup=actual_verify)    elif call.data == "deny_editing_period_ofmain_mes":        admin.flag = 4        bot.send_message(chat_id=user_id,                         text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∏—á–Ω–æ—Å—Ç–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ",                         reply_markup=admin_keyboard)    elif call.data == "important":        admin.flag = 17        bot.send_message(chat_id=user_id,                         text='–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ "–í–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞". –ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='back_main_admin')))    elif call.data == "back_to_composing_mes_important_rules":        bot.send_message(chat_id=user_id,                         text="–í—ã–±–µ—Ä–µ—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞. "                              "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ",                         reply_markup=new_message_for_actual_verify)    elif call.data == "add_button_important_rules":        admin.flag = 18        bot.send_message(chat_id=user_id,                         text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ —Å—Å—ã–ª–∫—É –∫–Ω–æ–ø–∫–∏. –ü—Ä–∏–º–µ—Ä:\n–ê–∫—Ç—É–ª—å–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏\nhttps://...",                         reply_markup=important_rules_composing_new_mes)    elif call.data == "accept_editing_mes_in_important_rules":        admin.flag = 4        if admin.new_important_rules_mes["keyboard"] is None:            try:                bot.delete_message(chat_id=important_rules,                                   message_id=load_data("main_mes_in_important_rules.json")["message_id"])            except:                pass            r = bot.send_message(chat_id=important_rules,                                 text=admin.new_important_rules_mes["text"])            save_data({"message_id": r.id}, "main_mes_in_important_rules.json")            bot.send_message(chat_id=user_id,                             text="–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ",                             reply_markup=admin_keyboard)        else:            try:                try:                    bot.delete_message(chat_id=important_rules,                                       message_id=load_data("main_mes_in_important_rules.json")[                                           "message_id"])                except:                    pass                r = bot.send_message(chat_id=important_rules,                                     text=admin.new_important_rules_mes["text"],                                     reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                         types.InlineKeyboardButton(text=admin.new_important_rules_mes["keyboard"][0],                                                                    url=admin.new_important_rules_mes["keyboard"][                                                                        1])))  # admin.new_actual_verify_mes_keyboard)                save_data({"message_id": r.id}, "main_mes_in_important_rules.json")                bot.send_message(chat_id=user_id,                                 text="–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ",                                 reply_markup=admin_keyboard)            except:                bot.send_message(chat_id=user_id,                                 text="–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–∞ —Å—Å—ã–ª–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ",                                 reply_markup=admin_keyboard)    elif call.data == "deny_editing_mes_in_important_rules":        admin.flag = 4        bot.send_message(chat_id=user_id,                         text="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –í–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ",                         reply_markup=admin_keyboard)    elif call.data == "payments":        ###–æ—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å–ø–æ—Å–æ–±–µ –æ–ø–ª–∞—Ç—ã        admin.flag = 4        admin.payment_method_settings_name = ""        admin.payment_method_settings_instruction = ""        bot.send_message(chat_id=user_id,                         text="–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",                         reply_markup=seting_payments_keyboard)    elif call.data == "new_payment":        admin.flag = 31        bot.send_message(chat_id=user_id,                         text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã (—Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏)",                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="payments")))    elif call.data == "back_to_input_instruction":        admin.flag = 32        admin.payment_method_settings_instruction = ""        bot.send_message(chat_id=user_id,                         text=f'–í—ã –≤–≤–µ–ª–∏:\n{admin.payment_method_settings_name}\n\n'                              f'–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —ç—Ç–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã',                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="new_payment")))    elif call.data == "save_new_payment_but":        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª        pay_keyboard_list[admin.payment_method_settings_name] = \            admin.payment_method_settings_instruction        pay_keyboard = list_to_keyboard(pay_keyboard_list)        pay_keyboard_for_admin = list_to_keyboard(pay_keyboard_list, "_change").add(            types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="payments"))        save_data(pay_keyboard_list, "payment_methods.json")        admin.payment_method_settings_name = ""        admin.payment_method_settings_instruction = ""        bot.send_message(chat_id=user_id,                         text="–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",                         reply_markup=seting_payments_keyboard)    elif call.data == "edit_payment":        admin.flag = 4        admin.payment_method_settings_name = ""        admin.payment_method_settings_instruction = ""        bot.send_message(chat_id=user_id,                         text="–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",                         reply_markup=pay_keyboard_for_admin)    elif "_change" in call.data or call.data == "back_to_chose_action_for_method":        if "_change" in call.data:            admin.payment_method_settings_name = str(call.data).split("_")[                0]        if admin.payment_method_settings_action != "":            bot.send_message(chat_id=user_id,                             text=f'{admin.payment_method_settings_name}',                             reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                 types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å",                                                            callback_data="delete_pay_method")).add(                                 types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="del_payment")))        else:            bot.send_message(chat_id=user_id,                             text=f'{admin.payment_method_settings_name}',                             reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                                 types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ",                                                            callback_data="edit_payment_method_name")).add(                                 types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",                                                            callback_data="edit_payment_method_instruction")).add(                                 types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="edit_payment")))    elif call.data == "edit_payment_method_name":        admin.flag = 33        bot.send_message(chat_id=user_id,                         text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏:\n{admin.payment_method_settings_name}\n\n'                              f'–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã',                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥",                                                        callback_data="back_to_chose_action_for_method")))    elif call.data == "edit_payment_method_instruction":        admin.flag = 34        bot.send_message(chat_id=user_id,                         text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏:\n{admin.payment_method_settings_name}\n\n'                              f'–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã',                         reply_markup=types.InlineKeyboardMarkup(row_width=1).add(                             types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥",                                                        callback_data="back_to_chose_action_for_method")))    elif call.data == "save_new_data_for_pay_method":        if admin.payment_method_settings_new_name != "":            pay_keyboard_list[admin.payment_method_settings_new_name] = \                pay_keyboard_list[admin.payment_method_settings_name]            del pay_keyboard_list[admin.payment_method_settings_name]        elif admin.payment_method_settings_new_instruction:            pay_keyboard_list[admin.payment_method_settings_name] = admin.payment_method_settings_name        pay_keyboard = list_to_keyboard(pay_keyboard_list)        pay_keyboard_for_admin = list_to_keyboard(pay_keyboard_list, "_change").add(            types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="payments"))        save_data(pay_keyboard_list, "payment_methods.json")        admin.payment_method_settings_name = ""        admin.payment_method_settings_instruction = ""        admin.payment_method_settings_new_name = ""        admin.payment_method_settings_new_instruction = ""        admin.flag = 4        bot.send_message(chat_id=user_id,                         text="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ. –ß—Ç–æ-—Ç–æ –µ—â—ë?",                         reply_markup=pay_keyboard_for_admin)    elif call.data == "del_payment":        admin.flag = 4        admin.payment_method_settings_action = "del"        bot.send_message(chat_id=user_id,                         text="–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è",                         reply_markup=pay_keyboard_for_admin)    elif call.data == "delete_pay_method":        del pay_keyboard_list[admin.payment_method_settings_name]        pay_keyboard = list_to_keyboard(pay_keyboard_list)        pay_keyboard_for_admin = list_to_keyboard(pay_keyboard_list, "_change").add(            types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="payments"))        save_data(pay_keyboard_list, "payment_methods.json")        admin.flag = 4        admin.payment_method_settings_name = ""        admin.payment_method_settings_instruction = ""        admin.payment_method_settings_new_name = ""        admin.payment_method_settings_new_instruction = ""        bot.send_message(chat_id=user_id,                         text=f'–ö–Ω–æ–ø–∫–∞ {admin.payment_method_settings_name} —É–¥–∞–ª–µ–Ω–∞',                         reply_markup=seting_payments_keyboard)    ################################################    #######    ###–ø–µ—Ä–µ—Ö–æ–¥ –∫ —É–¥–∞–ª–µ–Ω–∏—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è    elif call.data == "delete_task":        bot.send_message(chat_id=call.from_user.id, text="–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ?",                         reply_markup=action_del_task)    ###–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è    elif call.data == "delete_task_finally":        all_tasks -= admin.task_to_some_act        bot.answer_callback_query(callback_query_id=call.id,                                  text="–ó–∞–¥–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ",                                  show_alert=True)        bot.send_message(chat_id=call.from_user.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",                         reply_markup=choice_task)    ###–ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è    elif call.data == "past_task":        if len(all_tasks.get_past_tasks()) == 0:            bot.answer_callback_query(callback_query_id=call.id,                                      text="–ù–µ—Ç –∑–∞–¥–∞–Ω–∏–π",                                      show_alert=True)            bot.send_message(chat_id=call.from_user.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",                             reply_markup=choice_task)        else:            admin.flag = 45            admin.count_tasks_keyboard = 0            bot.send_message(chat_id=call.from_user.id,                             text="–í—Å–µ –∑–∞–¥–∞–Ω–∏—è",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_past_tasks_keyboard(), 0))    ###–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫ –≤—ã–±–æ—Ä—É –¥–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–¥–∞–Ω–∏—è–º–∏    elif call.data == "tasks_admin":        bot.send_message(chat_id=call.from_user.id,                         text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",                         reply_markup=choice_task)    ###–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏    elif call.data == "confirm_inst_task":        admin.flag = 44        bot.send_message(chat_id=call.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–¥–∞–Ω–∏—è",                         reply_markup=back_instr_task)    ###–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è    elif call.data == "confirm_cost_task":        bot.send_message(chat_id=call.from_user.id,                         text="–í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ñ–∏–ª—å—Ä–æ–≤ –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —ç—Ç–∞–ø",                         reply_markup=filter_task_keyboard)    ###–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è    elif call.data == "add_task":        admin.flag = 39        task1 = Task()        task1.set_id(int(call.message.id))        bot.send_message(chat_id=call.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",                         reply_markup=back_choice_task)    ###–Ω–∞—á–∞–ª–æ –≤–µ—Ç–≤–∏ –≤–≤–æ–¥–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏    elif call.data == "tune_time":        admin.flag = 40        bot.send_message(chat_id=call.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —á–∞—Å–∞—Ö",                         reply_markup=back_choice_filters)    ###–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏    elif call.data == "confirm_filter_time":        if task1.get_seats() is None:            bot.send_message(chat_id=call.from_user.id, text=f"–ó–∞–¥–∞–Ω–∏–µ:\n{task1.get_str_task()}",                             reply_markup=end_filter_time)        else:            bot.send_message(chat_id=call.from_user.id,                             text=f"–ó–∞–¥–∞–Ω–∏–µ:\n{task1.get_str_task()}",                             reply_markup=types.InlineKeyboardMarkup(row_width=1).                             add(types.InlineKeyboardButton(text="–≥–æ—Ç–æ–≤–æ",                                                            callback_data="skip_filter")))    ###–Ω–∞—á–∞–ª–æ –≤–µ—Ç–≤–∏ –≤–≤–æ–¥–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –∫–æ–ª-–≤—É –º–µ—Å—Ç    elif call.data == "tune_seats":        admin.flag = 41        bot.send_message(chat_id=call.from_user.id, text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª-–≤–æ –º–µ—Å—Ç",                         reply_markup=back_choice_filters)    ###–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –∫–æ–¥-–≤—É –º–µ—Å—Ç    elif call.data == "confirm_filter_seats":        if task1.get_time() is None:            bot.send_message(chat_id=call.from_user.id, text=f"–ó–∞–¥–∞–Ω–∏–µ:\n{task1.get_str_task()}",                             reply_markup=end_filter_seats)        else:            bot.send_message(chat_id=call.from_user.id,                             text=f"–ó–∞–¥–∞–Ω–∏–µ:\n{task1.get_str_task()}",                             reply_markup=fire_filter_task)    ###–Ω–∞—á–∞–ª–æ –≤–µ—Ç–≤–∏ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏    elif call.data == "del_task":        if len(all_tasks.get_actual_tasks()) == 0:            bot.answer_callback_query(callback_query_id=call.id,                                      text="–ù–µ—Ç –∑–∞–¥–∞–Ω–∏–π",                                      show_alert=True)            bot.send_message(chat_id=call.from_user.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",                             reply_markup=choice_task)        else:            admin.flag = 42            admin.count_tasks_keyboard = 0            bot.send_message(chat_id=call.from_user.id,                             text="–í—Å–µ –∑–∞–¥–∞–Ω–∏—è",                             reply_markup=all_tasks.slider_keyboard(                                 all_tasks.get_actual_tasks_keyboard(), 0))    elif call.data == "?back":        if admin.flag in [42, 45]:            admin.flag = 4            bot.send_message(chat_id=call.from_user.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",                             reply_markup=choice_task)        elif admin.flag in [43, 46, 47, 48]:            bot.send_message(chat_id=call.from_user.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",                             reply_markup=all_tasks.get_choice_tasks_keyboard())    elif call.data == "?>":        admin.count_tasks_keyboard += 1        if admin.flag == 42:            bot.send_message(chat_id=call.from_user.id,                             text="–í—Å–µ –∑–∞–¥–∞–Ω–∏—è",                             reply_markup=all_tasks.slider_keyboard(                                 all_tasks.get_actual_tasks_keyboard(),                                 admin.count_tasks_keyboard))        elif admin.flag == 43:            bot.send_message(chat_id=call.from_user.id,                             text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_actual_tasks_keyboard(),                                                                    admin.count_tasks_keyboard))        elif admin.flag == 46:            bot.send_message(chat_id=call.from_user.id,                             text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_fire_tasks_keyboard(),                                                                    admin.count_tasks_keyboard))        elif admin.flag == 47:            bot.send_message(chat_id=call.from_user.id,                             text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_time_tasks_keyboard(),                                                                    admin.count_tasks_keyboard))        elif admin.flag == 48:            bot.send_message(chat_id=call.from_user.id,                             text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_seats_tasks_keyboard(),                                                                    admin.count_tasks_keyboard))    elif call.data == "?<":        admin.count_tasks_keyboard -= 1        if admin.flag == 42:            bot.send_message(chat_id=call.from_user.id,                             text="–í—Å–µ –∑–∞–¥–∞–Ω–∏—è",                             reply_markup=all_tasks.slider_keyboard(                                 all_tasks.get_actual_tasks_keyboard(),                                 admin.count_tasks_keyboard))        elif admin.flag == 43:            bot.send_message(chat_id=call.from_user.id,                             text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_actual_tasks_keyboard(),                                                                    admin.count_tasks_keyboard))        elif admin.flag == 46:            bot.send_message(chat_id=call.from_user.id,                             text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_fire_tasks_keyboard(),                                                                    admin.count_tasks_keyboard))        elif admin.flag == 47:            bot.send_message(chat_id=call.from_user.id,                             text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_time_tasks_keyboard(),                                                                    admin.count_tasks_keyboard))        elif admin.flag == 48:            bot.send_message(chat_id=call.from_user.id,                             text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π",                             reply_markup=all_tasks.slider_keyboard(all_tasks.get_seats_tasks_keyboard(),                                                                    admin.count_tasks_keyboard))    ###–ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è    elif call.data == "publish_task":        all_tasks += task1        bot.answer_callback_query(callback_query_id=call.id,                                  text="–ó–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!",                                  show_alert=True)        bot.send_message(chat_id=call.from_user.id,                         text="–í—ã–±–µ—Ä–∏—Ç–µ",                         reply_markup=choice_task)        save_object(all_tasks)    elif call.data == "publish_past_task":        all_tasks.move_from_past_tasks_to_actual(int(admin.task_to_some_act))        bot.answer_callback_query(callback_query_id=call.id,                                  text="–ó–∞–¥–∞–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ",                                  show_alert=True)        bot.send_message(chat_id=call.from_user.id, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",                         reply_markup=choice_task)    ###–ø—Ä–æ–ø—É—Å–∫ —Ñ–∏–ª—å—Ç—Ä–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–¥–∞–Ω–∏—è    elif call.data == "skip_filter":        bot.send_message(chat_id=call.from_user.id,                         text=f"–ó–∞–¥–∞–Ω–∏–µ:\n{task1.get_str_task()}",                         reply_markup=fire_filter_task)    elif call.data == "setting_fire_filter":        task1.set_fire(True)        bot.send_message(chat_id=call.from_user.id,                         text=f"–ó–∞–¥–∞–Ω–∏–µ:\n{task1.get_str_task()}",                         reply_markup=end_add_task)    ##########################    ###–≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏    elif call.data == "back_main_admin":        bot.edit_message_text(chat_id=user_id,                              message_id=call.message.id,                              text="–í—ã –ø–æ–ø–∞–ª–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!\n"                                   "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:",                              reply_markup=admin_keyboard)        default_admin_value(admin)if __name__ == "__main__":    print("START")    bot.infinity_polling()    """WEBHOOK_LISTEN = "0.0.0.0"    WEBHOOK_PORT = 80    SERWER = "62.113.107.20"    WEBHOOK_SSL_CERT = 'webhook_cert.pem'    WEBHOOK_SSL_PRIV = 'webhook_pkey.pem'    context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)    context.load_cert_chain(WEBHOOK_SSL_CERT, WEBHOOK_SSL_PRIV)    bot.set_webhook(url=f"https://{SERWER}:{WEBHOOK_PORT}/{API_TOKEN}",                    certificate=open(WEBHOOK_SSL_CERT, "r"))    print(bot.get_webhook_info())    app.run(host=WEBHOOK_LISTEN, port=WEBHOOK_PORT, ssl_context=(WEBHOOK_SSL_CERT, WEBHOOK_SSL_PRIV), debug=False)    """